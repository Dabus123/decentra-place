"use strict";(self.webpackChunkan_onchain_app_in_100_components=self.webpackChunkan_onchain_app_in_100_components||[]).push([[3017],{"./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>WagmiConnector});var _thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/chains/dist/thirdweb-dev-chains.esm.js"),eventemitter3__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/eventemitter3/index.mjs");class WagmiConnector extends eventemitter3__WEBPACK_IMPORTED_MODULE_0__.A{constructor(_ref){let{chains=_thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_1__.k9b,options}=_ref;super(),this.chains=chains,this.options=options}getBlockExplorerUrls(chain){const explorers=chain.explorers?.map((x=>x.url))??[];return explorers.length>0?explorers:void 0}isChainUnsupported(chainId){return!this.chains.some((x=>x.chainId===chainId))}updateChains(chains){this.chains=chains}}},"./node_modules/@thirdweb-dev/wallets/dist/errors-9edc08c8.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>AddChainError,C:()=>ChainNotConfiguredError,R:()=>ResourceUnavailableError,S:()=>SwitchChainError,U:()=>UserRejectedRequestError,a:()=>ConnectorNotFoundError});var _defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/defineProperty-350fc508.browser.esm.js");class RpcError extends Error{constructor(message,options){const{cause,code,data}=options;if(!Number.isInteger(code))throw new Error('"code" must be an integer.');if(!message||"string"!=typeof message)throw new Error('"message" must be a nonempty string.');super(`${message}. Cause: ${JSON.stringify(cause)}`),this.cause=cause,this.code=code,this.data=data}}class ProviderRpcError extends RpcError{constructor(message,options){const{cause,code,data}=options;if(!(Number.isInteger(code)&&code>=1e3&&code<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(message,{cause,code,data})}}class AddChainError extends Error{constructor(){super(...arguments),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"name","AddChainError"),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"message","Error adding chain")}}class ChainNotConfiguredError extends Error{constructor(_ref){let{chainId,connectorId}=_ref;super(`Chain "${chainId}" not configured for connector "${connectorId}".`),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"name","ChainNotConfigured")}}class ConnectorNotFoundError extends Error{constructor(){super(...arguments),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"name","ConnectorNotFoundError"),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"message","Connector not found")}}class ResourceUnavailableError extends RpcError{constructor(cause){super("Resource unavailable",{cause,code:-32002}),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"name","ResourceUnavailable")}}class SwitchChainError extends ProviderRpcError{constructor(cause){super("Error switching chain",{cause,code:4902}),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"name","SwitchChainError")}}class UserRejectedRequestError extends ProviderRpcError{constructor(cause){super("User rejected request",{cause,code:4001}),(0,_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(this,"name","UserRejectedRequestError")}}},"./node_modules/@thirdweb-dev/wallets/evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{WalletConnectConnector:()=>WalletConnectConnector});var _dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/defineProperty-350fc508.browser.esm.js"),_dist_errors_9edc08c8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/errors-9edc08c8.browser.esm.js"),ethers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ethersproject/address/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@ethersproject/providers/lib.esm/web3-provider.js"),ethers__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@ethersproject/bytes/lib.esm/index.js"),_dist_walletIds_dff6dced_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/walletIds-dff6dced.browser.esm.js"),_dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js"),_dist_WagmiConnector_2f14002d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js");__webpack_require__("./node_modules/eventemitter3/index.mjs");const chainsToRequest=new Set([1,137,10,42161,56]);class WalletConnectConnector extends _dist_WagmiConnector_2f14002d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.W{constructor(config){super({...config,options:{isNewChainsStale:!0,...config.options}}),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"id",_dist_walletIds_dff6dced_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w.walletConnect),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"name","WalletConnect"),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"ready",!0),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onAccountsChanged",(accounts=>{0===accounts.length?this.emit("disconnect"):accounts[0]&&this.emit("change",{account:ethers__WEBPACK_IMPORTED_MODULE_4__.getAddress(accounts[0])})})),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onChainChanged",(async chainId=>{const id=Number(chainId),unsupported=this.isChainUnsupported(id);await this._storage.setItem("last-used-chain-id",String(chainId)),this.emit("change",{chain:{id,unsupported}})})),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onDisconnect",(async()=>{await this._setRequestedChainsIds([]),await this._storage.removeItem("last-used-chain-id"),this.emit("disconnect")})),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onDisplayUri",(uri=>{this.emit("message",{type:"display_uri",data:uri})})),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onConnect",(()=>{this.emit("connect",{provider:this._provider})})),this._storage=config.options.storage,this._createProvider(),this.filteredChains=this.chains.length>50?this.chains.filter((c=>chainsToRequest.has(c.chainId))):this.chains,this.showWalletConnectModal=!1!==this.options.qrcode}async connect(){let{chainId:chainIdP,pairingTopic}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let targetChainId=chainIdP;if(!targetChainId){const lastUsedChainIdStr=await this._storage.getItem("last-used-chain-id"),lastUsedChainId=lastUsedChainIdStr?parseInt(lastUsedChainIdStr):void 0;targetChainId=lastUsedChainId&&!this.isChainUnsupported(lastUsedChainId)?lastUsedChainId:this.filteredChains[0]?.chainId}if(!targetChainId)throw new Error("No chains found on connector.");const provider=await this.getProvider();if(this.setupListeners(),provider.session){await provider.disconnect();const optionalChains=this.filteredChains.filter((chain=>chain.chainId!==targetChainId)).map((optionalChain=>optionalChain.chainId));this.emit("message",{type:"connecting"}),await provider.connect({pairingTopic,chains:[targetChainId],optionalChains:optionalChains.length>0?optionalChains:[targetChainId]}),await this._setRequestedChainsIds(this.filteredChains.map((_ref=>{let{chainId}=_ref;return chainId})))}const accounts=await provider.enable();if(!accounts[0])throw new Error("No accounts found on provider.");const account=ethers__WEBPACK_IMPORTED_MODULE_4__.getAddress(accounts[0]),id=await this.getChainId();return{account,chain:{id,unsupported:this.isChainUnsupported(id)},provider:new ethers__WEBPACK_IMPORTED_MODULE_5__.j(provider)}}catch(error){if(/user rejected/i.test(error?.message))throw new _dist_errors_9edc08c8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.U(error);throw error}}async disconnect(){const cleanup=()=>{if("undefined"!=typeof localStorage)for(const key in localStorage)key.startsWith("wc@2")&&localStorage.removeItem(key)};cleanup();const provider=await this.getProvider();(async()=>{try{await provider.disconnect()}catch(error){if(!/No matching key/i.test(error.message))throw error}finally{this._removeListeners(),await this._setRequestedChainsIds([]),cleanup()}})()}async getAccount(){const{accounts}=await this.getProvider();if(!accounts[0])throw new Error("No accounts found on provider.");return ethers__WEBPACK_IMPORTED_MODULE_4__.getAddress(accounts[0])}async getChainId(){const{chainId}=await this.getProvider();return chainId}async getProvider(){let{chainId}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._provider||await this._createProvider(),chainId&&await this.switchChain(chainId),!this._provider)throw new Error("No provider found.");return this._provider}async getSigner(){let{chainId}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[provider,account]=await Promise.all([this.getProvider({chainId}),this.getAccount()]);return new ethers__WEBPACK_IMPORTED_MODULE_5__.j(provider,chainId).getSigner(account)}async isAuthorized(){try{const[account,provider]=await Promise.all([this.getAccount(),this.getProvider()]),isChainsStale=await this._isChainsStale();if(!account)return!1;if(isChainsStale&&provider.session){try{await provider.disconnect()}catch{}return!1}return!0}catch{return!1}}async switchChain(chainId){const chain=this.chains.find((chain_=>chain_.chainId===chainId));if(!chain)throw new _dist_errors_9edc08c8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.S(`Chain with ID: ${chainId}, not found on connector.`);try{const provider=await this.getProvider(),namespaceChains=this._getNamespaceChainsIds(),namespaceMethods=this._getNamespaceMethods();if(!namespaceChains.includes(chainId)&&namespaceMethods.includes("wallet_addEthereumChain")){const firstExplorer=chain.explorers&&chain.explorers[0],blockExplorerUrls=firstExplorer?{blockExplorerUrls:[firstExplorer.url]}:{};await provider.request({method:"wallet_addEthereumChain",params:[{chainId:ethers__WEBPACK_IMPORTED_MODULE_7__.hexValue(chain.chainId),chainName:chain.name,nativeCurrency:chain.nativeCurrency,rpcUrls:(0,_dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.g)(chain),...blockExplorerUrls}]});const requestedChains=await this._getRequestedChainsIds();requestedChains.push(chainId),await this._setRequestedChainsIds(requestedChains)}return await provider.request({method:"wallet_switchEthereumChain",params:[{chainId:ethers__WEBPACK_IMPORTED_MODULE_7__.hexValue(chainId)}]}),chain}catch(error){if(/user rejected request/i.test("string"==typeof error?error:error?.message))throw new _dist_errors_9edc08c8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.U(error);throw new _dist_errors_9edc08c8_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.S(error)}}async _createProvider(){return this._initProviderPromise||(this._initProviderPromise=this.initProvider()),this._initProviderPromise}async initProvider(){const{default:EthereumProvider,OPTIONAL_EVENTS,OPTIONAL_METHODS}=await __webpack_require__.e(238).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/ethereum-provider/dist/index.es.js")),[defaultChain,...optionalChains]=this.filteredChains.map((_ref2=>{let{chainId}=_ref2;return chainId}));defaultChain&&(this._provider=await EthereumProvider.init({showQrModal:this.showWalletConnectModal,projectId:this.options.projectId,methods:["eth_sendTransaction","personal_sign","eth_signTypedData_v4"],optionalMethods:OPTIONAL_METHODS,optionalEvents:OPTIONAL_EVENTS,chains:[defaultChain],optionalChains,metadata:{name:this.options.dappMetadata.name,description:this.options.dappMetadata.description||"",url:this.options.dappMetadata.url,icons:[this.options.dappMetadata.logoUrl||""]},rpcMap:Object.fromEntries(this.filteredChains.map((chain=>[chain.chainId,chain.rpc[0]||""]))),qrModalOptions:this.options.qrModalOptions}))}async _isChainsStale(){if(this._getNamespaceMethods().includes("wallet_addEthereumChain"))return!1;if(!this.options.isNewChainsStale)return!1;const requestedChains=await this._getRequestedChainsIds(),connectorChains=this.filteredChains.map((_ref3=>{let{chainId}=_ref3;return chainId})),namespaceChains=this._getNamespaceChainsIds();return!(namespaceChains.length&&!namespaceChains.some((id=>connectorChains.includes(id))))&&!connectorChains.every((id=>requestedChains.includes(id)))}async setupListeners(){this._provider&&(this._removeListeners(),this._provider.on("accountsChanged",this.onAccountsChanged),this._provider.on("chainChanged",this.onChainChanged),this._provider.on("disconnect",this.onDisconnect),this._provider.on("session_delete",this.onDisconnect),this._provider.on("display_uri",this.onDisplayUri),this._provider.on("connect",this.onConnect))}_removeListeners(){this._provider&&(this._provider.removeListener("accountsChanged",this.onAccountsChanged),this._provider.removeListener("chainChanged",this.onChainChanged),this._provider.removeListener("disconnect",this.onDisconnect),this._provider.removeListener("session_delete",this.onDisconnect),this._provider.removeListener("display_uri",this.onDisplayUri),this._provider.removeListener("connect",this.onConnect))}async _setRequestedChainsIds(chains){await this._storage.setItem("wagmi.requestedChains",JSON.stringify(chains))}async _getRequestedChainsIds(){const data=await this._storage.getItem("wagmi.requestedChains");return data?JSON.parse(data):[]}_getNamespaceChainsIds(){if(!this._provider)return[];const chainIds=this._provider.session?.namespaces.eip155?.chains?.map((chain=>parseInt(chain.split(":")[1]||"")));return chainIds??[]}_getNamespaceMethods(){if(!this._provider)return[];const methods=this._provider.session?.namespaces.eip155?.methods;return methods??[]}}}}]);