"use strict";(self.webpackChunkan_onchain_app_in_100_components=self.webpackChunkan_onchain_app_in_100_components||[]).push([[2589],{"./node_modules/@thirdweb-dev/wallets/dist/http-rpc-client-0a079e80.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>DEBUG,H:()=>HttpRpcClient,g:()=>getUserOpHashV06,h:()=>hexlifyUserOp,r:()=>randomNonce});var ethers__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@ethersproject/properties/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ethersproject/bytes/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@ethersproject/keccak256/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ethersproject/abi/lib.esm/abi-coder.js"),ethers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),ethers__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js"),_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js"),_headers_733a8199_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/headers-733a8199.browser.esm.js"),_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/utils-f58e7acc.browser.esm.js");async function hexlifyUserOp(op){const userOp=await ethers__WEBPACK_IMPORTED_MODULE_0__.resolveProperties(op);return Object.keys(userOp).map((key=>{let val=userOp[key];return"string"==typeof val&&val.startsWith("0x")||(val=ethers__WEBPACK_IMPORTED_MODULE_1__.hexValue(val)),[key,val]})).reduce(((set,_ref)=>{let[k,v]=_ref;return{...set,[k]:v}}),{})}async function getUserOpHashV06(userOp,entryPoint,chainId){const op=await ethers__WEBPACK_IMPORTED_MODULE_0__.resolveProperties(userOp),hashedUserOp={sender:op.sender,nonce:op.nonce,initCodeHash:ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(op.initCode),callDataHash:ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(op.callData),callGasLimit:op.callGasLimit,verificationGasLimit:op.verificationGasLimit,preVerificationGas:op.preVerificationGas,maxFeePerGas:op.maxFeePerGas,maxPriorityFeePerGas:op.maxPriorityFeePerGas,paymasterAndDataHash:ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(op.paymasterAndData)},encoded=ethers__WEBPACK_IMPORTED_MODULE_3__.D.encode([{components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes32",name:"initCodeHash"},{type:"bytes32",name:"callDataHash"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes32",name:"paymasterAndDataHash"}],name:"hashedUserOp",type:"tuple"}],[{...hashedUserOp}]),userOpHash=ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(encoded),enc=ethers__WEBPACK_IMPORTED_MODULE_3__.D.encode(["bytes32","address","uint256"],[userOpHash,entryPoint,chainId]);return ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(enc)}const randomNonce=()=>{let hexString=(()=>{const rand1=BigInt(Math.floor(4294967296*Math.random())),rand2=BigInt(Math.floor(4294967296*Math.random())),rand3=BigInt(Math.floor(4294967296*Math.random())),rand4=BigInt(Math.floor(4294967296*Math.random())),rand5=BigInt(Math.floor(4294967296*Math.random())),rand6=BigInt(Math.floor(4294967296*Math.random()));return rand1<<BigInt(160)|rand2<<BigInt(128)|rand3<<BigInt(96)|rand4<<BigInt(64)|rand5<<BigInt(32)|rand6})().toString(16);return hexString.length%2!=0&&(hexString="0"+hexString),hexString="0x"+hexString,ethers__WEBPACK_IMPORTED_MODULE_4__.gH.from(ethers__WEBPACK_IMPORTED_MODULE_1__.concat([hexString,"0x0000000000000000"]))},DEBUG=!1;class HttpRpcClient{constructor(bundlerUrl,entryPointAddress,chainId,clientId,secretKey){this.bundlerUrl=bundlerUrl,this.entryPointAddress=entryPointAddress,this.chainId=chainId;const headers={};if((0,_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.i)(this.bundlerUrl)){const bundleId="undefined"!=typeof globalThis&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;secretKey?headers["x-secret-key"]=secretKey:clientId&&(headers["x-client-id"]=clientId,bundleId&&(headers["x-bundle-id"]=bundleId)),"undefined"!=typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_AUTH_TOKEN&&(headers.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),"undefined"!=typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_CLI_AUTH_TOKEN&&(headers.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,headers["x-authorize-wallet"]="true"),(0,_headers_733a8199_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.s)(headers)}this.userOpJsonRpcProvider=new ethers__WEBPACK_IMPORTED_MODULE_7__.B({url:this.bundlerUrl,headers},{name:"Connected bundler network",chainId}),this.initializing=this.validateChainId()}async validateChainId(){if(await(0,_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.e)(this.chainId))return;const chain=await this.userOpJsonRpcProvider.send("eth_chainId",[]),bundlerChain=parseInt(chain);if(bundlerChain!==this.chainId)throw new Error(`bundler ${this.bundlerUrl} is on chainId ${bundlerChain}, but provider is on chainId ${this.chainId}`)}async sendUserOpToBundler(userOp1){await this.initializing;const hexifiedUserOp=await hexlifyUserOp(userOp1),jsonRequestData=[hexifiedUserOp,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",jsonRequestData),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[hexifiedUserOp,this.entryPointAddress])}async estimateUserOpGas(userOp){await this.initializing;const hexifiedUserOp=await hexlifyUserOp(userOp),jsonRequestData=[hexifiedUserOp,this.entryPointAddress];await this.printUserOperation("eth_estimateUserOperationGas",jsonRequestData);const data=await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[hexifiedUserOp,this.entryPointAddress]);return{preVerificationGas:ethers__WEBPACK_IMPORTED_MODULE_4__.gH.from(data.preVerificationGas),verificationGas:ethers__WEBPACK_IMPORTED_MODULE_4__.gH.from(data.verificationGas),verificationGasLimit:ethers__WEBPACK_IMPORTED_MODULE_4__.gH.from(data.verificationGasLimit),callGasLimit:ethers__WEBPACK_IMPORTED_MODULE_4__.gH.from(data.callGasLimit).add(_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.M)}}async getUserOperationGasPrice(){return await this.initializing,await this.userOpJsonRpcProvider.send("thirdweb_getUserOperationGasPrice",[])}async getUserOperationReceipt(userOpHash){return await this.initializing,await this.userOpJsonRpcProvider.send("eth_getUserOperationReceipt",[userOpHash])}async zkPaymasterData(transactionInput){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_paymasterData",[await hexlifyUserOp({...transactionInput,gas:transactionInput.gasLimit})])}async zkBroadcastTransaction(transactionInput){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_broadcastTransaction",[transactionInput])}async printUserOperation(method,_ref){}}},"./node_modules/@thirdweb-dev/wallets/evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{SmartWalletConnector:()=>SmartWalletConnector});var _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/connector-05689d68.browser.esm.js"),_dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/http-rpc-client-0a079e80.browser.esm.js"),_dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js"),_dist_headers_733a8199_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/headers-733a8199.browser.esm.js"),_account_abstraction_contracts__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@account-abstraction/contracts/dist/index.js"),ethers__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@ethersproject/abi/lib.esm/abi-coder.js"),ethers__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@ethersproject/abstract-signer/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@ethersproject/properties/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@ethersproject/hash/lib.esm/message.js"),ethers__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js"),ethers__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/@ethersproject/contracts/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@ethersproject/providers/lib.esm/base-provider.js"),ethers__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),ethers__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@ethersproject/bytes/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/@ethersproject/constants/lib.esm/addresses.js"),ethers__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__("./node_modules/@ethersproject/wallet/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__("./node_modules/@ethersproject/address/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__("./node_modules/@ethersproject/strings/lib.esm/utf8.js"),ethers__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__("./node_modules/@ethersproject/units/lib.esm/index.js"),_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/defineProperty-350fc508.browser.esm.js"),_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js"),_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js"),_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/sdk-3e21fc5c.browser.esm.js"),_wallets_abstract_dist_thirdweb_dev_wallets_evm_wallets_abstract_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js"),_dist_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/utils-f58e7acc.browser.esm.js"),_thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/@thirdweb-dev/chains/dist/thirdweb-dev-chains.esm.js"),console=(__webpack_require__("./node_modules/eventemitter3/index.mjs"),__webpack_require__("./node_modules/console-browserify/index.js"));class PaymasterAPI{}class VerifyingPaymasterAPI extends PaymasterAPI{constructor(paymasterUrl,entryPoint,clientId,secretKey){super(),this.paymasterUrl=paymasterUrl,this.entryPoint=entryPoint,this.clientId=clientId,this.secretKey=secretKey}async getPaymasterAndData(userOp){const headers={"Content-Type":"application/json"};if((0,_dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.paymasterUrl)){if(this.secretKey&&this.clientId)throw new Error("Cannot use both secret key and client ID. Please use secretKey for server-side applications and clientId for client-side applications.");if(this.secretKey)headers["x-secret-key"]=this.secretKey;else if(this.clientId){headers["x-client-id"]=this.clientId;const bundleId="undefined"!=typeof globalThis&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;bundleId&&(headers["x-bundle-id"]=bundleId)}"undefined"!=typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_AUTH_TOKEN&&(headers.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),"undefined"!=typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_CLI_AUTH_TOKEN&&(headers.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,headers["x-authorize-wallet"]="true"),(0,_dist_headers_733a8199_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.s)(headers)}const response=await fetch(this.paymasterUrl,{method:"POST",headers,body:JSON.stringify({jsonrpc:"2.0",id:1,method:"pm_sponsorUserOperation",params:[await(0,_dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.h)(userOp),this.entryPoint]})}),res=await response.json();if(!response.ok){const error=res.error||response.statusText,code=res.code||"UNKNOWN";throw new Error(`Paymaster error: ${error}\nStatus: ${response.status}\nCode: ${code}`)}if(_dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.D&&console.debug("Paymaster result:",res),res.result)return"string"==typeof res.result?{paymasterAndData:res.result}:res.result;{const error=res.error?.message||res.error||response.statusText||"unknown error";throw new Error(`Paymaster error from ${this.paymasterUrl}: ${error}`)}}}const getVerifyingPaymaster=(paymasterUrl,entryPoint,clientId,secretKey)=>new VerifyingPaymasterAPI(paymasterUrl,entryPoint,clientId,secretKey);class UserOperationEventListener{constructor(resolve,reject,entryPoint,sender,userOpHash,nonce,timeout){this.resolve=resolve,this.reject=reject,this.entryPoint=entryPoint,this.sender=sender,this.userOpHash=userOpHash,this.nonce=nonce,this.timeout=timeout,(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__._)(this,"resolved",!1),this.boundLisener=this.listenerCallback.bind(this)}start(){const filter=this.entryPoint.filters.UserOperationEvent(this.userOpHash);setTimeout((async()=>{const res=await this.entryPoint.queryFilter(filter,-10);res.length>0?this.listenerCallback(res[0]):this.entryPoint.once(filter,this.boundLisener)}),100)}stop(){this.entryPoint.off("UserOperationEvent",this.boundLisener)}async listenerCallback(){for(var _len=arguments.length,param=new Array(_len),_key=0;_key<_len;_key++)param[_key]=arguments[_key];const event=arguments[arguments.length-1];if(!event.args)return void console.error("got event without args",event);if(event.args.userOpHash!==this.userOpHash)return void console.log(`== event with wrong userOpHash: sender/nonce: event.${event.args.sender}@${event.args.nonce.toString()}!= userOp.${this.sender}@${parseInt(this.nonce?.toString())}`);const transactionReceipt=await event.getTransactionReceipt();event.args.success||await this.extractFailureReason(transactionReceipt),this.stop(),this.resolve(transactionReceipt),this.resolved=!0}async extractFailureReason(receipt){receipt.status=0;const revertReasonEvents=await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash,this.sender),receipt.blockHash);if(revertReasonEvents[0]){let message=revertReasonEvents[0].args.revertReason;message.startsWith("0x08c379a0")&&(message=ethers__WEBPACK_IMPORTED_MODULE_7__.D.decode(["string"],"0x"+message.substring(10)).toString()),this.reject(new Error(`UserOp failed with reason: ${message}`))}}}class ERC4337EthersSigner extends ethers__WEBPACK_IMPORTED_MODULE_8__.Signer{constructor(config,originalSigner,erc4337provider,httpRpcClient,smartAccountAPI){super(),ethers__WEBPACK_IMPORTED_MODULE_9__.defineReadOnly(this,"provider",erc4337provider),this.config=config,this.originalSigner=originalSigner,this.erc4337provider=erc4337provider,this.httpRpcClient=httpRpcClient,this.smartAccountAPI=smartAccountAPI,this.approving=!1}async sendTransaction(transaction,options){if(!this.approving){this.approving=!0;const tx=await this.smartAccountAPI.createApproveTx();tx&&await(await this.sendTransaction(tx)).wait(),this.approving=!1}const tx=await ethers__WEBPACK_IMPORTED_MODULE_9__.resolveProperties(transaction);await this.verifyAllNecessaryFields(tx);const multidimensionalNonce=(0,_dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.r)(),unsigned=await this.smartAccountAPI.createUnsignedUserOp(this.httpRpcClient,{target:tx.to||"",data:tx.data?.toString()||"0x",value:tx.value,gasLimit:tx.gasLimit,nonce:multidimensionalNonce,maxFeePerGas:tx.maxFeePerGas,maxPriorityFeePerGas:tx.maxPriorityFeePerGas},options),userOperation=await this.smartAccountAPI.signUserOp(unsigned),transactionResponse=await this.erc4337provider.constructUserOpTransactionResponse(userOperation);try{await this.httpRpcClient.sendUserOpToBundler(userOperation)}catch(error){throw this.unwrapError(error)}return transactionResponse}unwrapError(errorIn){try{let errorMsg="Unknown Error";if(errorIn.error)errorMsg=`The bundler has failed to include UserOperation in a batch: ${errorIn.error}`;else if(errorIn.body&&"string"==typeof errorIn.body){const errorBody=JSON.parse(errorIn.body),errorStatus=errorIn.status||"UNKNOWN",errorCode=errorBody?.code||"UNKNOWN";let failedOpMessage=errorBody?.error?.message||errorBody?.error?.data||errorBody?.error||errorIn.reason;if(failedOpMessage?.includes("FailedOp")){let paymasterInfo="";const matched=failedOpMessage.match(/FailedOp\((.*)\)/);if(matched){const split=matched[1].split(",");paymasterInfo=`(paymaster address: ${split[1]})`,failedOpMessage=split[2]}errorMsg=`The bundler has failed to include UserOperation in a batch: ${failedOpMessage} ${paymasterInfo}`}else errorMsg=`RPC error: ${failedOpMessage}\nStatus: ${errorStatus}\nCode: ${errorCode}`}const error=new Error(errorMsg);return error.stack=errorIn.stack,error}catch(error){}return errorIn}async verifyAllNecessaryFields(transactionRequest){if(!transactionRequest.to)throw new Error("Missing call target");if(!transactionRequest.data&&!transactionRequest.value)throw new Error("Missing call data or value")}connect(provider){throw new Error("changing providers is not supported")}async getAddress(){return this.address||(this.address=await this.erc4337provider.getSenderAccountAddress()),this.address}async signMessage(message){if(await this.smartAccountAPI.checkAccountPhantom()){console.log("Account contract not deployed yet. Deploying account before signing message");const tx=await this.sendTransaction({to:await this.getAddress(),data:"0x"});await tx.wait()}const[chainId,address]=await Promise.all([this.getChainId(),this.getAddress()]),originalMsgHash=ethers__WEBPACK_IMPORTED_MODULE_10__.A(message);let factorySupports712,signature;const rpcUrl=(0,_wallets_abstract_dist_thirdweb_dev_wallets_evm_wallets_abstract_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.Q)(chainId,this.config.clientId),headers={};if((0,_dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.i)(rpcUrl)){const bundleId="undefined"!=typeof globalThis&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;this.config.secretKey?headers["x-secret-key"]=this.config.secretKey:this.config.clientId&&(headers["x-client-id"]=this.config.clientId,bundleId&&(headers["x-bundle-id"]=bundleId)),"undefined"!=typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_AUTH_TOKEN&&(headers.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),"undefined"!=typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_CLI_AUTH_TOKEN&&(headers.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,headers["x-authorize-wallet"]="true"),(0,_dist_headers_733a8199_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.s)(headers)}try{const provider=new ethers__WEBPACK_IMPORTED_MODULE_11__.B({url:rpcUrl,headers},chainId),walletContract=new ethers__WEBPACK_IMPORTED_MODULE_12__.NZ(address,["function getMessageHash(bytes32 _hash) public view returns (bytes32)"],provider);await walletContract.getMessageHash(originalMsgHash),factorySupports712=!0}catch{factorySupports712=!1}if(factorySupports712){signature=(await(0,_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_13__.aM)(this,{name:"Account",version:"1",chainId,verifyingContract:address},{AccountMessage:[{name:"message",type:"bytes"}]},{message:ethers__WEBPACK_IMPORTED_MODULE_7__.D.encode(["bytes32"],[originalMsgHash])})).signature}else signature=await this.originalSigner.signMessage(message);if(await(0,_dist_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.c)(message,signature,address,chainId,this.config.clientId,this.config.secretKey))return signature;throw new Error("Unable to verify signature on smart account, please make sure the smart account is deployed and the signature is valid.")}async signTransaction(transaction,options){const tx=await ethers__WEBPACK_IMPORTED_MODULE_9__.resolveProperties(transaction);await this.verifyAllNecessaryFields(tx);const multidimensionalNonce=(0,_dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.r)(),unsigned=await this.smartAccountAPI.createUnsignedUserOp(this.httpRpcClient,{target:tx.to||"",data:tx.data?.toString()||"0x",value:tx.value,gasLimit:tx.gasLimit,nonce:multidimensionalNonce},options),userOperation=await this.smartAccountAPI.signUserOp(unsigned);return JSON.stringify(await(0,_dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.h)(userOperation))}}class ERC4337EthersProvider extends ethers__WEBPACK_IMPORTED_MODULE_15__.DJ{constructor(chainId,config,originalSigner,originalProvider,httpRpcClient,entryPoint,smartAccountAPI){super({name:"ERC-4337 Custom Network",chainId}),this.chainId=chainId,this.config=config,this.originalSigner=originalSigner,this.originalProvider=originalProvider,this.httpRpcClient=httpRpcClient,this.entryPoint=entryPoint,this.smartAccountAPI=smartAccountAPI,this.signer=new ERC4337EthersSigner(config,originalSigner,this,httpRpcClient,smartAccountAPI)}getSigner(){return this.signer}async perform(method,params){if("sendTransaction"===method||"getTransactionReceipt"===method)throw new Error("Should not get here. Investigate.");return"estimateGas"===method?ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(5e5):await this.originalProvider.perform(method,params)}async getTransaction(transactionHash){return await super.getTransaction(transactionHash)}async getTransactionReceipt(transactionHash){const userOpHash=await transactionHash,sender=await this.getSenderAccountAddress();return await new Promise(((resolve,reject)=>{new UserOperationEventListener(resolve,reject,this.entryPoint,sender,userOpHash).start()}))}async getSenderAccountAddress(){return await this.smartAccountAPI.getAccountAddress()}async waitForTransaction(transactionHash,confirmations,timeout){const sender=await this.getSenderAccountAddress();return await new Promise(((resolve,reject)=>{new UserOperationEventListener(resolve,reject,this.entryPoint,sender,transactionHash,void 0,timeout).start()}))}async constructUserOpTransactionResponse(userOp1){const userOp=await ethers__WEBPACK_IMPORTED_MODULE_9__.resolveProperties(userOp1),userOpHash=await this.smartAccountAPI.getUserOpHash(userOp);return{hash:userOpHash,confirmations:0,from:userOp.sender,nonce:0,gasLimit:ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(userOp.callGasLimit),value:ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(0),data:ethers__WEBPACK_IMPORTED_MODULE_17__.hexValue(userOp.callData),chainId:this.chainId,wait:async confirmations=>{const transactionReceipt=await this.smartAccountAPI.getUserOpReceipt(this.httpRpcClient,userOpHash);return 0!==userOp.initCode.length&&await this.smartAccountAPI.checkAccountPhantom(),transactionReceipt}}}async detectNetwork(){return this.originalProvider.detectNetwork()}}class BaseAccountAPI{constructor(params){(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__._)(this,"isPhantom",!0),this.provider=params.provider,this.entryPointAddress=params.entryPointAddress,this.accountAddress=params.accountAddress,this.paymasterAPI=params.paymasterAPI,this.gasless=params.gasless,this.erc20PaymasterAddress=params.erc20PaymasterAddress,this.erc20TokenAddress=params.erc20TokenAddress,this.entryPointView=_account_abstraction_contracts__WEBPACK_IMPORTED_MODULE_0__.EntryPoint__factory.connect(params.entryPointAddress,params.provider).connect(ethers__WEBPACK_IMPORTED_MODULE_18__.L)}async checkAccountPhantom(){if(!this.isPhantom)return this.isPhantom;return(await this.provider.getCode(this.getAccountAddress())).length>2&&(this.isPhantom=!1),this.isPhantom}async getInitCode(){return await this.checkAccountPhantom()?await this.getAccountInitCode():"0x"}async getVerificationGasLimit(){return 1e5}async getUserOpHash(userOp){const chainId=await this.provider.getNetwork().then((net=>net.chainId));return(0,_dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.g)(userOp,this.entryPointAddress,chainId)}async getAccountAddress(){return this.senderAddress||(this.accountAddress?this.senderAddress=this.accountAddress:this.senderAddress=await this.getCounterFactualAddress()),this.senderAddress}async estimateCreationGas(initCode){if(!initCode||"0x"===initCode)return 0;const deployerAddress=initCode.substring(0,42),deployerCallData="0x"+initCode.substring(42);return await this.provider.estimateGas({to:deployerAddress,data:deployerCallData})}async createUnsignedUserOp(httpRpcClient,info,options){let{maxFeePerGas,maxPriorityFeePerGas}=info;if((0,_dist_url_a45219bd_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.i)(httpRpcClient.bundlerUrl)){const bundlerFeeData=await httpRpcClient.getUserOperationGasPrice();maxFeePerGas=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(bundlerFeeData.maxFeePerGas),maxPriorityFeePerGas=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(bundlerFeeData.maxPriorityFeePerGas)}else if(!maxFeePerGas||!maxPriorityFeePerGas){const feeData=await(0,_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_19__.a)(this.provider);if(maxPriorityFeePerGas||(maxPriorityFeePerGas=feeData.maxPriorityFeePerGas??void 0),!maxFeePerGas){maxFeePerGas=feeData.maxFeePerGas??void 0;const chainId=(await this.provider.getNetwork()).chainId;chainId!==_thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_20__._yE.chainId&&chainId!==_thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_20__.eLx.chainId&&chainId!==_thirdweb_dev_chains__WEBPACK_IMPORTED_MODULE_20__.vyO.chainId||(maxPriorityFeePerGas=maxFeePerGas)}}if(!maxFeePerGas||!maxPriorityFeePerGas)throw new Error("maxFeePerGas or maxPriorityFeePerGas could not be calculated, please pass them explicitely");const[sender,nonce]=await Promise.all([this.getAccountAddress(),info.nonce?Promise.resolve(info.nonce):this.getNonce()]),initCode=await this.getInitCode(),value=function parseNumber(a){if(!a||""===a)return null;return ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(a.toString())}(info.value)??ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(0),callData=options?.batchData?info.data:await this.prepareExecute(info.target,value,info.data).then((async tx=>(info.gasLimit||await this.provider.estimateGas({from:sender,to:info.target,data:info.data,value}),tx.encode()))),partialOp={sender,nonce,initCode,callData,maxFeePerGas,maxPriorityFeePerGas,callGasLimit:ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(1e6),verificationGasLimit:ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(1e6),preVerificationGas:ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(1e6),paymasterAndData:"0x",signature:"0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c"},gasless=void 0!==options?.gasless?options.gasless:this.gasless;if(this.erc20PaymasterAddress&&this.erc20TokenAddress&&await this.isAccountApproved()){let estimates;partialOp.paymasterAndData=this.erc20PaymasterAddress;try{estimates=await httpRpcClient.estimateUserOpGas(partialOp)}catch(error){throw this.unwrapBundlerError(error)}partialOp.callGasLimit=estimates.callGasLimit,partialOp.verificationGasLimit=estimates.verificationGasLimit,partialOp.preVerificationGas=estimates.preVerificationGas}else if(gasless){const paymasterResult=await this.paymasterAPI.getPaymasterAndData(partialOp),paymasterAndData=paymasterResult.paymasterAndData;if(paymasterAndData&&"0x"!==paymasterAndData&&(partialOp.paymasterAndData=paymasterAndData),paymasterResult.callGasLimit&&paymasterResult.verificationGasLimit&&paymasterResult.preVerificationGas)partialOp.callGasLimit=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(paymasterResult.callGasLimit),partialOp.verificationGasLimit=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(paymasterResult.verificationGasLimit),partialOp.preVerificationGas=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(paymasterResult.preVerificationGas);else{let estimates;try{estimates=await httpRpcClient.estimateUserOpGas(partialOp)}catch(error){throw this.unwrapBundlerError(error)}if(partialOp.callGasLimit=estimates.callGasLimit,partialOp.verificationGasLimit=estimates.verificationGasLimit,partialOp.preVerificationGas=estimates.preVerificationGas,paymasterAndData&&"0x"!==paymasterAndData){const paymasterResult2=await this.paymasterAPI.getPaymasterAndData(partialOp);paymasterResult2.paymasterAndData&&"0x"!==paymasterResult2.paymasterAndData&&(partialOp.paymasterAndData=paymasterResult2.paymasterAndData)}}}else{let estimates;try{estimates=await httpRpcClient.estimateUserOpGas(partialOp)}catch(error){throw this.unwrapBundlerError(error)}partialOp.callGasLimit=estimates.callGasLimit,partialOp.verificationGasLimit=estimates.verificationGasLimit,partialOp.preVerificationGas=estimates.preVerificationGas}return{...partialOp,signature:""}}async signUserOp(userOp){const userOpHash=await this.getUserOpHash(userOp),signature=await this.signUserOpHash(userOpHash);return{...userOp,signature}}async getUserOpReceipt(httpRpcClient,userOpHash){let timeout=arguments.length>2&&void 0!==arguments[2]?arguments[2]:12e4,interval=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e3;const endtime=Date.now()+timeout;for(;Date.now()<endtime;){const userOpReceipt=await httpRpcClient.getUserOperationReceipt(userOpHash);if(userOpReceipt)return await this.provider.waitForTransaction(userOpReceipt.receipt.transactionHash);await new Promise((resolve=>setTimeout(resolve,interval)))}throw new Error("Timeout waiting for userOp to be mined")}unwrapBundlerError(error){const message=error?.error?.message||error.error||error.message||error;return new Error(message)}}class AccountAPI extends BaseAccountAPI{constructor(params,originalProvider){super({...params,provider:originalProvider}),this.params=params,this.sdk=_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_21__.T.fromPrivateKey(_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_21__.L,params.chain,{clientId:params.clientId,secretKey:params.secretKey,supportedChains:"object"==typeof params.chain?[params.chain]:void 0})}async getChainId(){return await this.provider.getNetwork().then((n=>n.chainId))}async getAccountContract(){return this.accountContract||(this.params.accountInfo?.abi?this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),this.params.accountInfo.abi):this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),_dist_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.A)),this.accountContract}async getAccountInitCode(){const factory=await this.getFactoryContract(),localSigner=await this.params.localSigner.getAddress(),tx=await this.params.factoryInfo.createAccount(factory,localSigner);return ethers__WEBPACK_IMPORTED_MODULE_17__.hexConcat([factory.getAddress(),tx.encode()])}async getFactoryContract(){return this.factoryContract||(this.params.factoryInfo?.abi?this.factoryContract=await this.sdk.getContract(this.params.factoryAddress,this.params.factoryInfo.abi):this.factoryContract=await this.sdk.getContract(this.params.factoryAddress)),this.factoryContract}async getCounterFactualAddress(){if(this.params.accountAddress)return this.params.accountAddress;const factory=await this.getFactoryContract(),localSigner=await this.params.localSigner.getAddress();return this.params.factoryInfo.getAccountAddress(factory,localSigner)}async getNonce(){if(await this.checkAccountPhantom())return ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(0);const accountContract=await this.getAccountContract();return this.params.accountInfo.getNonce(accountContract)}async prepareExecute(target,value,data){const accountContract=await this.getAccountContract();return this.params.accountInfo.execute(accountContract,target,value,data)}async prepareExecuteBatch(targets,values,datas){return(await this.getAccountContract()).prepare("executeBatch",[targets,values,datas])}async signUserOpHash(userOpHash){return await this.params.localSigner.signMessage(ethers__WEBPACK_IMPORTED_MODULE_17__.arrayify(userOpHash))}async isAcountDeployed(){return!await this.checkAccountPhantom()}async isAccountApproved(){if(!this.params.erc20PaymasterAddress||!this.params.erc20TokenAddress)return!0;const swAddress=await this.getCounterFactualAddress(),ERC20Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json",19))).default,erc20Token=await this.sdk.getContract(this.params.erc20TokenAddress,ERC20Abi);return(await erc20Token.call("allowance",[swAddress,this.params.erc20PaymasterAddress])).gte(ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(2).pow(96).sub(1))}async createApproveTx(){if(await this.isAccountApproved())return;const amountToApprove=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(2).pow(96).sub(1),ethersSigner=new ethers__WEBPACK_IMPORTED_MODULE_22__.Wallet(_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_21__.L,this.provider),erc20Contract=new ethers__WEBPACK_IMPORTED_MODULE_12__.NZ(this.params.erc20TokenAddress,["function approve(address spender, uint256 amount) public returns (bool)"],ethersSigner);return{to:this.params.erc20TokenAddress,from:await this.getAccountAddress(),value:0,data:erc20Contract.interface.encodeFunctionData("approve",[this.params.erc20PaymasterAddress,amountToApprove])}}}class SmartWalletConnector extends _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_23__.C{constructor(config){super(),this.config=config}async initialize(params){const config=this.config,originalProvider=(0,_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_13__.a_)(config.chain,{clientId:config.clientId,secretKey:config.secretKey});this.chainId=(await originalProvider.getNetwork()).chainId;const bundlerUrl=this.config.bundlerUrl||`https://${this.chainId}.bundler.thirdweb.com`,paymasterUrl=this.config.paymasterUrl||`https://${this.chainId}.bundler.thirdweb.com`,entryPointAddress=config.entryPointAddress||_dist_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.f,localSigner=await params.personalWallet.getSigner(),providerConfig={chain:config.chain,localSigner,entryPointAddress,bundlerUrl,paymasterAPI:this.config.paymasterAPI?this.config.paymasterAPI:getVerifyingPaymaster(paymasterUrl,entryPointAddress,this.config.clientId,this.config.secretKey),gasless:config.gasless,factoryAddress:config.factoryAddress||_dist_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.D,accountAddress:params.accountAddress,factoryInfo:{createAccount:config.factoryInfo?.createAccount||this.defaultFactoryInfo().createAccount,getAccountAddress:config.factoryInfo?.getAccountAddress||this.defaultFactoryInfo().getAccountAddress,abi:config.factoryInfo?.abi},accountInfo:{execute:config.accountInfo?.execute||this.defaultAccountInfo().execute,getNonce:config.accountInfo?.getNonce||this.defaultAccountInfo().getNonce,abi:config.accountInfo?.abi},clientId:config.clientId,secretKey:config.secretKey,erc20PaymasterAddress:config.erc20PaymasterAddress,erc20TokenAddress:config.erc20TokenAddress};this.personalWallet=params.personalWallet;const accountApi=new AccountAPI(providerConfig,originalProvider);this.aaProvider=function create4337Provider(config,accountApi,originalProvider,chainId){const entryPoint=_account_abstraction_contracts__WEBPACK_IMPORTED_MODULE_0__.EntryPoint__factory.connect(config.entryPointAddress,originalProvider),httpRpcClient=new _dist_http_rpc_client_0a079e80_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.H(config.bundlerUrl,config.entryPointAddress,chainId,config.clientId,config.secretKey);return new ERC4337EthersProvider(chainId,config,config.localSigner,originalProvider,httpRpcClient,entryPoint,accountApi)}(providerConfig,accountApi,originalProvider,this.chainId),this.accountApi=accountApi}async connect(connectionArgs){return await this.initialize(connectionArgs),await this.getAddress()}getProvider(){if(!this.aaProvider)throw new Error("Personal wallet not connected");return Promise.resolve(this.aaProvider)}async getSigner(){if(!this.aaProvider)throw new Error("Personal wallet not connected");return Promise.resolve(this.aaProvider.getSigner())}async getAddress(){return(await this.getSigner()).getAddress()}async isConnected(){try{return!!await this.getAddress()}catch(e){return!1}}async disconnect(){this.personalWallet=void 0,this.aaProvider=void 0}async switchChain(chainId){const provider=await this.getProvider();if((await provider.getNetwork()).chainId!==chainId)throw new Error("Not supported.")}setupListeners(){return Promise.resolve()}updateChains(chains){}async hasPermissionToExecute(transaction){const accountContract=await this.getAccountContract(),signer=await this.getSigner(),signerAddress=await signer.getAddress(),restrictions=(await accountContract.account.getAllSigners()).filter((item=>ethers__WEBPACK_IMPORTED_MODULE_24__.getAddress(item.signer)===ethers__WEBPACK_IMPORTED_MODULE_24__.getAddress(signerAddress)))[0]?.permissions;return!!restrictions&&restrictions.approvedCallTargets.includes(transaction.getTarget())}async send(transaction,options){return(await this.getSigner()).sendTransaction({to:transaction.getTarget(),data:transaction.encode(),value:await transaction.getValue()},options)}async execute(transaction,options){const tx=await this.send(transaction,options);return{receipt:await tx.wait()}}async sendBatch(transactions,options){if(!this.accountApi)throw new Error("Personal wallet not connected");const signer=await this.getSigner(),{tx,batchData}=await this.prepareBatchTx(transactions);return await signer.sendTransaction({to:await signer.getAddress(),data:tx.encode(),value:0},{...options,batchData})}async executeBatch(transactions,options){const tx=await this.sendBatch(transactions,options);return{receipt:await tx.wait()}}async sendRaw(transaction,options){if(!this.accountApi)throw new Error("Personal wallet not connected");return(await this.getSigner()).sendTransaction(transaction,options)}async executeRaw(transaction,options){const tx=await this.sendRaw(transaction,options);return{receipt:await tx.wait()}}async sendBatchRaw(transactions,options){if(!this.accountApi)throw new Error("Personal wallet not connected");const signer=await this.getSigner(),batch=await this.prepareBatchRaw(transactions);return signer.sendTransaction({to:await signer.getAddress(),data:batch.tx.encode(),value:0},{...options,batchData:batch.batchData})}async executeBatchRaw(transactions,options){const tx=await this.sendBatchRaw(transactions,options);return{receipt:await tx.wait()}}async estimate(transaction,options){if(!this.accountApi)throw new Error("Personal wallet not connected");return this.estimateTx({target:transaction.getTarget(),data:transaction.encode(),value:await transaction.getValue(),gasLimit:await transaction.getOverrides().gasLimit,maxFeePerGas:await transaction.getOverrides().maxFeePerGas,maxPriorityFeePerGas:await transaction.getOverrides().maxPriorityFeePerGas,nonce:await transaction.getOverrides().nonce},options)}async estimateRaw(transaction,options){if(!this.accountApi)throw new Error("Personal wallet not connected");const tx=await ethers__WEBPACK_IMPORTED_MODULE_9__.resolveProperties(transaction);return this.estimateTx({target:tx.to||ethers__WEBPACK_IMPORTED_MODULE_18__.L,data:tx.data?.toString()||"",value:tx.value||ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(0),gasLimit:tx.gasLimit,maxFeePerGas:tx.maxFeePerGas,maxPriorityFeePerGas:tx.maxPriorityFeePerGas,nonce:tx.nonce},options)}async estimateBatch(transactions,options){if(!this.accountApi)throw new Error("Personal wallet not connected");const{tx,batchData}=await this.prepareBatchTx(transactions);return this.estimateTx({target:tx.getTarget(),data:tx.encode(),value:await tx.getValue(),gasLimit:await tx.getOverrides().gasLimit,maxFeePerGas:await tx.getOverrides().maxFeePerGas,maxPriorityFeePerGas:await tx.getOverrides().maxPriorityFeePerGas,nonce:await tx.getOverrides().nonce},{...options,batchData})}async estimateBatchRaw(transactions,options){if(!this.accountApi)throw new Error("Personal wallet not connected");const{tx,batchData}=await this.prepareBatchRaw(transactions);return this.estimateTx({target:tx.getTarget(),data:tx.encode(),value:await tx.getValue(),gasLimit:await tx.getOverrides().gasLimit,maxFeePerGas:await tx.getOverrides().maxFeePerGas,maxPriorityFeePerGas:await tx.getOverrides().maxPriorityFeePerGas,nonce:await tx.getOverrides().nonce},{...options,batchData})}async deploy(options){if(!this.accountApi)throw new Error("Personal wallet not connected");const signer=await this.getSigner(),tx=await signer.sendTransaction({to:await signer.getAddress(),data:"0x"},{...options,batchData:{targets:[],data:[],values:[]}});return{receipt:await tx.wait()}}async isDeployed(){if(!this.accountApi)throw new Error("Personal wallet not connected");return await this.accountApi.isAcountDeployed()}async deployIfNeeded(options){await this.isDeployed()||await this.deploy(options)}async grantPermissions(target,permissions){return(await this.getAccountContract()).account.grantPermissions(target,permissions)}async revokePermissions(target){return(await this.getAccountContract()).account.revokeAccess(target)}async addAdmin(target){return(await this.getAccountContract()).account.grantAdminPermissions(target)}async removeAdmin(target){return(await this.getAccountContract()).account.revokeAdminPermissions(target)}async getAllActiveSigners(){if(await this.isDeployed()){return(await this.getAccountContract()).account.getAllAdminsAndSigners()}{const personalWallet=await(this.personalWallet?.getSigner());if(!personalWallet)throw new Error("Personal wallet not connected");return[{isAdmin:!0,signer:await personalWallet.getAddress(),permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(0),approvedCallTargets:[]}}]}}async getAccountContract(){const sdk=_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_21__.T.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return this.config.accountInfo?.abi?sdk.getContract(await this.getAddress(),this.config.accountInfo.abi):sdk.getContract(await this.getAddress(),_dist_utils_f58e7acc_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.A)}async getFactoryContract(){if(!this.config.factoryAddress)throw new Error("Factory address not set!");const sdk=_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_21__.T.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return this.config.factoryInfo?.abi?sdk.getContract(this.config.factoryAddress,this.config.factoryInfo.abi):sdk.getContract(this.config.factoryAddress)}defaultFactoryInfo(){return{createAccount:async(factory,owner)=>factory.prepare("createAccount",[owner,ethers__WEBPACK_IMPORTED_MODULE_25__.YW("")]),getAccountAddress:async(factory,owner)=>await factory.call("getAddress",[owner,ethers__WEBPACK_IMPORTED_MODULE_25__.YW("")])}}defaultAccountInfo(){return{execute:async(account,target,value,data)=>account.prepare("execute",[target,value,data]),getNonce:async account=>account.call("getNonce",[])}}async estimateTx(tx,options){if(!this.accountApi||!this.aaProvider)throw new Error("Personal wallet not connected");let deployGasLimit=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(0);const[provider,isDeployed]=await Promise.all([this.getProvider(),this.isDeployed()]);isDeployed||(deployGasLimit=await this.estimateDeploymentGasLimit());const[userOp,gasPrice]=await Promise.all([this.accountApi.createUnsignedUserOp(this.aaProvider.httpRpcClient,tx,options),(0,_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_19__.b)(provider)]),resolved=await ethers__WEBPACK_IMPORTED_MODULE_9__.resolveProperties(userOp),transactionGasLimit=ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(resolved.callGasLimit),transactionCost=transactionGasLimit.mul(gasPrice),deployCost=deployGasLimit.mul(gasPrice),totalCost=deployCost.add(transactionCost);return{ether:ethers__WEBPACK_IMPORTED_MODULE_26__.formatEther(totalCost),wei:totalCost,details:{deployGasLimit,transactionGasLimit,gasPrice,transactionCost,deployCost,totalCost}}}async estimateDeploymentGasLimit(){if(!this.accountApi)throw new Error("Personal wallet not connected");const initCode=await this.accountApi.getInitCode(),[initGas,verificationGasLimit]=await Promise.all([this.accountApi.estimateCreationGas(initCode),this.accountApi.getVerificationGasLimit()]);return ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(verificationGasLimit).add(initGas)}async prepareBatchRaw(transactions){if(!this.accountApi)throw new Error("Personal wallet not connected");const resolvedTxs=await Promise.all(transactions.map((transaction=>ethers__WEBPACK_IMPORTED_MODULE_9__.resolveProperties(transaction)))),targets=resolvedTxs.map((tx=>tx.to||ethers__WEBPACK_IMPORTED_MODULE_18__.L)),data=resolvedTxs.map((tx=>tx.data||"0x")),values=resolvedTxs.map((tx=>tx.value||ethers__WEBPACK_IMPORTED_MODULE_16__.gH.from(0)));return{tx:await this.accountApi.prepareExecuteBatch(targets,values,data),batchData:{targets,data,values}}}async prepareBatchTx(transactions){if(!this.accountApi)throw new Error("Personal wallet not connected");const targets=transactions.map((tx=>tx.getTarget())),data=transactions.map((tx=>tx.encode())),values=await Promise.all(transactions.map((tx=>tx.getValue())));return{tx:await this.accountApi.prepareExecuteBatch(targets,values,data),batchData:{targets,data,values}}}}}}]);