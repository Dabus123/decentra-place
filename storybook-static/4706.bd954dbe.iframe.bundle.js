"use strict";(self.webpackChunkan_onchain_app_in_100_components=self.webpackChunkan_onchain_app_in_100_components||[]).push([[4706],{"./node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-a5888d37.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>StandardErc1155});var _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js"),_erc_1155_7ce9bee1_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/erc-1155-7ce9bee1.browser.esm.js");class StandardErc1155{get chainId(){return this._chainId}constructor(contractWrapper,storage,chainId){this.contractWrapper=contractWrapper,this.storage=storage,this.erc1155=new _erc_1155_7ce9bee1_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.E(this.contractWrapper,this.storage,chainId),this._chainId=chainId}onNetworkUpdated(network){this.contractWrapper.updateSignerOrProvider(network)}getAddress(){return this.contractWrapper.address}async get(tokenId){return this.erc1155.get(tokenId)}async totalSupply(tokenId){return this.erc1155.totalSupply(tokenId)}async balanceOf(address,tokenId){return this.erc1155.balanceOf(address,tokenId)}async balance(tokenId){return this.erc1155.balance(tokenId)}async isApproved(address,operator){return this.erc1155.isApproved(address,operator)}transfer=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((()=>{var _this=this;return async function(to,tokenId,amount){let data=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];return _this.erc1155.transfer.prepare(to,tokenId,amount,data)}})());transferBatch=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((()=>{var _this2=this;return async function(to,tokenIds,amounts,fromAddress){let data=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[0];return _this2.erc1155.transferBatch.prepare(to,tokenIds,amounts,fromAddress,data)}})());setApprovalForAll=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((async(operator,approved)=>this.erc1155.setApprovalForAll.prepare(operator,approved)));airdrop=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)((()=>{var _this3=this;return async function(tokenId,addresses,fromAddress){let data=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];return _this3.erc1155.airdrop.prepare(tokenId,addresses,fromAddress,data)}})())}},"./node_modules/@thirdweb-dev/sdk/dist/hasERC20Allowance-654a940b.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>hasERC20Allowance});var _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js");async function hasERC20Allowance(contractToApprove,currencyAddress,value){const provider=contractToApprove.getProvider(),ERC20Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json",19))).default,erc20=new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.cs(provider,currencyAddress,ERC20Abi,{},contractToApprove.storage),owner=await contractToApprove.getSignerAddress(),spender=contractToApprove.address;return(await erc20.read("allowance",[owner,spender])).gte(value)}},"./node_modules/@thirdweb-dev/sdk/dist/marketplace-e3129e2f.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>isWinningBid,g:()=>getAllInBatches,h:()=>handleTokenApproval,i:()=>isTokenApprovedForTransfer,m:()=>mapOffer,v:()=>validateNewListingParam});var ethers__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@ethersproject/contracts/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),tiny_invariant__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tiny-invariant/dist/esm/tiny-invariant.js"),_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/QueryParams-32a56510.browser.esm.js"),_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js"),_fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-32d08b05.browser.esm.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");async function isTokenApprovedForTransfer(provider,transferrerContractAddress,assetContract,tokenId,owner){try{const ERC165Abi=(await __webpack_require__.e(4811).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC165.json",19))).default,erc165=new ethers__WEBPACK_IMPORTED_MODULE_0__.NZ(assetContract,ERC165Abi,provider),[isERC721,isERC1155]=await Promise.all([erc165.supportsInterface(_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.I),erc165.supportsInterface(_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.a)]);if(isERC721){const ERC721Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721.json",19))).default,asset=new ethers__WEBPACK_IMPORTED_MODULE_0__.NZ(assetContract,ERC721Abi,provider);if(await asset.isApprovedForAll(owner,transferrerContractAddress))return!0;let approvedAddress;try{approvedAddress=await asset.getApproved(tokenId)}catch(e){}return approvedAddress?.toLowerCase()===transferrerContractAddress.toLowerCase()}if(isERC1155){const ERC1155Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155.json",19))).default,asset=new ethers__WEBPACK_IMPORTED_MODULE_0__.NZ(assetContract,ERC1155Abi,provider);return await asset.isApprovedForAll(owner,transferrerContractAddress)}return console.error("Contract does not implement ERC 1155 or ERC 721."),!1}catch(err){return console.error("Failed to check if token is approved",err),!1}}async function handleTokenApproval(contractWrapper,marketplaceAddress,assetContract,tokenId,from){const ERC165Abi=(await __webpack_require__.e(4811).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC165.json",19))).default,erc165=new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.cs(contractWrapper.getSignerOrProvider(),assetContract,ERC165Abi,contractWrapper.options,contractWrapper.storage),[isERC721,isERC1155]=await Promise.all([erc165.read("supportsInterface",[_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.I]),erc165.read("supportsInterface",[_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.a])]);if(isERC721){const ERC721Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721.json",19))).default,asset=new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.cs(contractWrapper.getSignerOrProvider(),assetContract,ERC721Abi,contractWrapper.options,contractWrapper.storage);if(!await asset.read("isApprovedForAll",[from,marketplaceAddress])){(await asset.read("getApproved",[tokenId])).toLowerCase()===marketplaceAddress.toLowerCase()||await asset.sendTransaction("setApprovalForAll",[marketplaceAddress,!0])}}else{if(!isERC1155)throw Error("Contract must implement ERC 1155 or ERC 721.");{const ERC1155Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155.json",19))).default,asset=new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.cs(contractWrapper.getSignerOrProvider(),assetContract,ERC1155Abi,contractWrapper.options,contractWrapper.storage);await asset.read("isApprovedForAll",[from,marketplaceAddress])||await asset.sendTransaction("setApprovalForAll",[marketplaceAddress,!0])}}}function validateNewListingParam(param){if((0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__.A)(void 0!==param.assetContractAddress&&null!==param.assetContractAddress,"Asset contract address is required"),(0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__.A)(void 0!==param.buyoutPricePerToken&&null!==param.buyoutPricePerToken,"Buyout price is required"),(0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__.A)(void 0!==param.listingDurationInSeconds&&null!==param.listingDurationInSeconds,"Listing duration is required"),(0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__.A)(void 0!==param.startTimestamp&&null!==param.startTimestamp,"Start time is required"),(0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__.A)(void 0!==param.tokenId&&null!==param.tokenId,"Token ID is required"),(0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__.A)(void 0!==param.quantity&&null!==param.quantity,"Quantity is required"),"NewAuctionListing"===param.type)(0,tiny_invariant__WEBPACK_IMPORTED_MODULE_3__.A)(void 0!==param.reservePricePerToken&&null!==param.reservePricePerToken,"Reserve price is required")}async function mapOffer(provider,listingId,offer){return{quantity:offer.quantityDesired,pricePerToken:offer.pricePerToken,currencyContractAddress:offer.currency,buyerAddress:offer.offeror,quantityDesired:offer.quantityWanted,currencyValue:await(0,_fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.a)(provider,offer.currency,offer.quantityWanted.mul(offer.pricePerToken)),listingId}}function isWinningBid(winningPrice,newBidPrice,bidBuffer){if(bidBuffer=ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(bidBuffer),winningPrice=ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(winningPrice),newBidPrice=ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(newBidPrice),winningPrice.eq(ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(0)))return!1;return newBidPrice.sub(winningPrice).mul(_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dE).div(winningPrice).gte(bidBuffer)}async function getAllInBatches(start,end,fn){const batches=[];for(;end-start>_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.D;)batches.push(fn(start,start+_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.D-1)),start+=_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.D;return batches.push(fn(start,end-1)),await Promise.all(batches)}},"./node_modules/@thirdweb-dev/sdk/dist/pack-02f90278.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Pack:()=>Pack});var bignumber=__webpack_require__("./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),lib_esm=__webpack_require__("./node_modules/@ethersproject/units/lib.esm/index.js"),addresses=__webpack_require__("./node_modules/@ethersproject/constants/lib.esm/addresses.js"),fetchCurrencyValue_32d08b05_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-32d08b05.browser.esm.js"),hasERC20Allowance_654a940b_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/hasERC20Allowance-654a940b.browser.esm.js"),normalizePriceValue_9851c0eb_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/normalizePriceValue-9851c0eb.browser.esm.js"),index_33cd3415_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js"),assertEnabled_d1700f0b_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/assertEnabled-d1700f0b.browser.esm.js"),contract_appuri_5c40af52_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/contract-appuri-5c40af52.browser.esm.js"),marketplace_e3129e2f_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/marketplace-e3129e2f.browser.esm.js"),QueryParams_32a56510_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/QueryParams-32a56510.browser.esm.js"),transactions_72f9603c_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js"),contract_interceptor_d7b164a7_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js"),contract_owner_49e75547_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/contract-owner-49e75547.browser.esm.js"),contract_roles_71988d2e_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/contract-roles-71988d2e.browser.esm.js"),erc_1155_standard_a5888d37_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/erc-1155-standard-a5888d37.browser.esm.js"),IPackVRFDirect=__webpack_require__("./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json"),erc_20_9a18a51c_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/erc-20-9a18a51c.browser.esm.js"),setErc20Allowance_7f76f677_browser_esm=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/setErc20Allowance-7f76f677.browser.esm.js"),lib=__webpack_require__("./node_modules/zod/lib/index.mjs");const CommonWrappableSchema=(()=>lib.z.object({contractAddress:index_33cd3415_browser_esm.b9}))(),ERC20WrappableSchema=(()=>CommonWrappableSchema.extend({quantity:index_33cd3415_browser_esm.cw}))(),ERC721WrappableSchema=(()=>CommonWrappableSchema.extend({tokenId:index_33cd3415_browser_esm.b6}))(),ERC1155WrappableSchema=(()=>CommonWrappableSchema.extend({tokenId:index_33cd3415_browser_esm.b6,quantity:index_33cd3415_browser_esm.b6}))(),ERC20RewardSchema=(()=>ERC20WrappableSchema.omit({quantity:!0}).extend({quantityPerReward:index_33cd3415_browser_esm.cw}))(),ERC721RewardSchema=ERC721WrappableSchema,ERC1155RewardSchema=(()=>ERC1155WrappableSchema.omit({quantity:!0}).extend({quantityPerReward:index_33cd3415_browser_esm.b6}))(),ERC20RewardContentsSchema=(()=>ERC20RewardSchema.extend({totalRewards:index_33cd3415_browser_esm.b6.default("1")}))(),ERC721RewardContentsSchema=ERC721RewardSchema,ERC1155RewardContentsSchema=(()=>ERC1155RewardSchema.extend({totalRewards:index_33cd3415_browser_esm.b6.default("1")}))(),PackRewardsOutputSchema=(()=>lib.z.object({erc20Rewards:lib.z.array(ERC20RewardContentsSchema).default([]),erc721Rewards:lib.z.array(ERC721RewardContentsSchema).default([]),erc1155Rewards:lib.z.array(ERC1155RewardContentsSchema).default([])}))(),PackMetadataInputSchema=(()=>PackRewardsOutputSchema.extend({packMetadata:setErc20Allowance_7f76f677_browser_esm.N,rewardsPerPack:index_33cd3415_browser_esm.b6.default("1"),openStartTime:assertEnabled_d1700f0b_browser_esm.R.default(new Date)}))();__webpack_require__("./node_modules/bn.js/lib/bn.js"),__webpack_require__("./node_modules/bs58/index.js"),__webpack_require__("./node_modules/eventemitter3/index.mjs"),__webpack_require__("./node_modules/fast-deep-equal/index.js");class PackVRF{featureName=index_33cd3415_browser_esm.dK.name;constructor(network,address,storage,options,chainId){let contractWrapper=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new index_33cd3415_browser_esm.cs(network,address,IPackVRFDirect,options,storage);this.contractWrapper=contractWrapper,this.storage=storage,this.chainId=chainId,this.events=new contract_appuri_5c40af52_browser_esm.a(this.contractWrapper)}onNetworkUpdated(network){this.contractWrapper.updateSignerOrProvider(network)}getAddress(){return this.contractWrapper.address}open=(0,transactions_72f9603c_browser_esm.f)((()=>{var _this=this;return async function(tokenId){let amount=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,gasLimit=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;return transactions_72f9603c_browser_esm.T.fromContractWrapper({contractWrapper:_this.contractWrapper,method:"openPack",args:[tokenId,amount],overrides:{gasLimit},parse:receipt=>{let id=bignumber.gH.from(0);try{id=_this.contractWrapper.parseLogs("PackOpenRequested",receipt?.logs)[0].args.requestId}catch(e){}return{receipt,id}}})}})());claimRewards=(0,transactions_72f9603c_browser_esm.f)((()=>{var _this2=this;return async function(){let gasLimit=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5e5;return transactions_72f9603c_browser_esm.T.fromContractWrapper({contractWrapper:_this2.contractWrapper,method:"claimRewards",args:[],overrides:{gasLimit},parse:async receipt=>{const event=_this2.contractWrapper.parseLogs("PackOpened",receipt?.logs);if(0===event.length)throw new Error("PackOpened event not found");const rewards=event[0].args.rewardUnitsDistributed;return await _this2.parseRewards(rewards)}})}})());async parseRewards(rewards){const erc20Rewards=[],erc721Rewards=[],erc1155Rewards=[];for(const reward of rewards)switch(reward.tokenType){case 0:{const tokenMetadata=await(0,fetchCurrencyValue_32d08b05_browser_esm.f)(this.contractWrapper.getProvider(),reward.assetContract);erc20Rewards.push({contractAddress:reward.assetContract,quantityPerReward:lib_esm.formatUnits(reward.totalAmount,tokenMetadata.decimals).toString()});break}case 1:erc721Rewards.push({contractAddress:reward.assetContract,tokenId:reward.tokenId.toString()});break;case 2:erc1155Rewards.push({contractAddress:reward.assetContract,tokenId:reward.tokenId.toString(),quantityPerReward:reward.totalAmount.toString()})}return{erc20Rewards,erc721Rewards,erc1155Rewards}}async addPackOpenEventListener(callback){return this.events.addEventListener("PackOpened",(async event=>{callback(event.data.packId.toString(),event.data.opener,await this.parseRewards(event.data.rewardUnitsDistributed))}))}async canClaimRewards(claimerAddress){const address=await(0,index_33cd3415_browser_esm.aL)(claimerAddress||await this.contractWrapper.getSignerAddress());return await this.contractWrapper.read("canClaimRewards",[address])}async openAndClaim(packId){let amount=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,gasLimit=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;const receipt=await this.contractWrapper.sendTransaction("openPackAndClaimRewards",[packId,amount,gasLimit],{gasLimit:bignumber.gH.from(5e5)});let id=bignumber.gH.from(0);try{id=this.contractWrapper.parseLogs("PackOpenRequested",receipt?.logs)[0].args.requestId}catch(e){}return{receipt,id}}async getLinkBalance(){const ERC20Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json",19))).default;return this.getLinkContract(ERC20Abi).balanceOf(this.contractWrapper.address)}async transferLink(amount){const ERC20Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json",19))).default;await this.getLinkContract(ERC20Abi).transfer(this.contractWrapper.address,amount)}getLinkContract(ERC20Abi){const linkAddress=index_33cd3415_browser_esm.aY[this.chainId];if(!linkAddress)throw new Error(`No LINK token address found for chainId ${this.chainId}`);const contract=new index_33cd3415_browser_esm.cs(this.contractWrapper.getSignerOrProvider(),linkAddress,ERC20Abi,this.contractWrapper.options,this.storage);return new erc_20_9a18a51c_browser_esm.E(contract,this.storage,this.chainId)}}class Pack extends erc_1155_standard_a5888d37_browser_esm.S{static contractRoles=index_33cd3415_browser_esm.dL;get vrf(){return(0,assertEnabled_d1700f0b_browser_esm.a)(this._vrf,index_33cd3415_browser_esm.dK)}constructor(network,address,storage){let options=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},abi=arguments.length>4?arguments[4]:void 0,chainId=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new index_33cd3415_browser_esm.cs(network,address,abi,options.gasless&&"openzeppelin"in options.gasless?{...options,gasless:{...options.gasless,openzeppelin:{...options.gasless.openzeppelin,useEOAForwarder:!0}}}:options,storage),storage,chainId),this.abi=index_33cd3415_browser_esm.bj.parse(abi||[]),this.metadata=new contract_appuri_5c40af52_browser_esm.C(this.contractWrapper,index_33cd3415_browser_esm.c3,this.storage),this.app=new contract_appuri_5c40af52_browser_esm.b(this.contractWrapper,this.metadata,this.storage),this.roles=new contract_roles_71988d2e_browser_esm.C(this.contractWrapper,Pack.contractRoles),this.royalties=new contract_owner_49e75547_browser_esm.C(this.contractWrapper,this.metadata),this.encoder=new fetchCurrencyValue_32d08b05_browser_esm.C(this.contractWrapper),this.estimator=new contract_appuri_5c40af52_browser_esm.G(this.contractWrapper),this.events=new contract_appuri_5c40af52_browser_esm.a(this.contractWrapper),this.interceptor=new contract_interceptor_d7b164a7_browser_esm.C(this.contractWrapper),this.owner=new contract_owner_49e75547_browser_esm.a(this.contractWrapper),this._vrf=this.detectVrf()}onNetworkUpdated(network){this.contractWrapper.updateSignerOrProvider(network),this._vrf?.onNetworkUpdated(network)}getAddress(){return this.contractWrapper.address}async get(tokenId){return this.erc1155.get(tokenId)}async getAll(queryParams){return this.erc1155.getAll(queryParams)}async getOwned(walletAddress){return this.erc1155.getOwned(walletAddress)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[(0,index_33cd3415_browser_esm.H)("transfer"),addresses.L])}async getPackContents(packId){const{contents,perUnitAmounts}=await this.contractWrapper.read("getPackContents",[packId]),erc20Rewards=[],erc721Rewards=[],erc1155Rewards=[];for(let i=0;i<contents.length;i++){const reward=contents[i],amount=perUnitAmounts[i];switch(reward.tokenType){case 0:{const tokenMetadata=await(0,fetchCurrencyValue_32d08b05_browser_esm.f)(this.contractWrapper.getProvider(),reward.assetContract),quantityPerReward=lib_esm.formatUnits(amount,tokenMetadata.decimals),totalRewards=lib_esm.formatUnits(bignumber.gH.from(reward.totalAmount).div(amount),tokenMetadata.decimals);erc20Rewards.push({contractAddress:reward.assetContract,quantityPerReward,totalRewards});break}case 1:erc721Rewards.push({contractAddress:reward.assetContract,tokenId:reward.tokenId.toString()});break;case 2:erc1155Rewards.push({contractAddress:reward.assetContract,tokenId:reward.tokenId.toString(),quantityPerReward:amount.toString(),totalRewards:bignumber.gH.from(reward.totalAmount).div(amount).toString()})}}return{erc20Rewards,erc721Rewards,erc1155Rewards}}create=(0,transactions_72f9603c_browser_esm.f)((async metadataWithRewards=>{const signerAddress=await this.contractWrapper.getSignerAddress();return this.createTo.prepare(signerAddress,metadataWithRewards)}));addPackContents=(0,transactions_72f9603c_browser_esm.f)((async(packId,packContents)=>{const[signerAddress,parsedContents]=await Promise.all([this.contractWrapper.getSignerAddress(),PackRewardsOutputSchema.parseAsync(packContents)]),{contents,numOfRewardUnits}=await this.toPackContentArgs(parsedContents);return transactions_72f9603c_browser_esm.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addPackContents",args:[packId,contents,numOfRewardUnits,signerAddress],parse:receipt=>{const event=this.contractWrapper.parseLogs("PackUpdated",receipt?.logs);if(0===event.length)throw new Error("PackUpdated event not found");const id=event[0].args.packId;return{id,receipt,data:()=>this.erc1155.get(id)}}})}));createTo=(0,transactions_72f9603c_browser_esm.f)((async(to,metadataWithRewards)=>{const[uri,parsedMetadata,toAddress]=await Promise.all([(0,QueryParams_32a56510_browser_esm.b)(metadataWithRewards.packMetadata,this.storage),PackMetadataInputSchema.parseAsync(metadataWithRewards),(0,index_33cd3415_browser_esm.aL)(to)]),{erc20Rewards,erc721Rewards,erc1155Rewards}=parsedMetadata,rewardsData={erc20Rewards,erc721Rewards,erc1155Rewards},{contents,numOfRewardUnits}=await this.toPackContentArgs(rewardsData);return transactions_72f9603c_browser_esm.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createPack",args:[contents,numOfRewardUnits,uri,parsedMetadata.openStartTime,parsedMetadata.rewardsPerPack,toAddress],parse:receipt=>{const event=this.contractWrapper.parseLogs("PackCreated",receipt?.logs);if(0===event.length)throw new Error("PackCreated event not found");const packId=event[0].args.packId;return{id:packId,receipt,data:()=>this.erc1155.get(packId)}}})}));open=(0,transactions_72f9603c_browser_esm.f)((()=>{var _this=this;return async function(tokenId){let amount=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,gasLimit=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;if(_this._vrf)throw new Error("This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead");return transactions_72f9603c_browser_esm.T.fromContractWrapper({contractWrapper:_this.contractWrapper,method:"openPack",args:[tokenId,amount],overrides:{gasLimit},parse:async receipt=>{const event=_this.contractWrapper.parseLogs("PackOpened",receipt?.logs);if(0===event.length)throw new Error("PackOpened event not found");const rewards=event[0].args.rewardUnitsDistributed,erc20Rewards=[],erc721Rewards=[],erc1155Rewards=[];for(const reward of rewards)switch(reward.tokenType){case 0:{const tokenMetadata=await(0,fetchCurrencyValue_32d08b05_browser_esm.f)(_this.contractWrapper.getProvider(),reward.assetContract);erc20Rewards.push({contractAddress:reward.assetContract,quantityPerReward:lib_esm.formatUnits(reward.totalAmount,tokenMetadata.decimals).toString()});break}case 1:erc721Rewards.push({contractAddress:reward.assetContract,tokenId:reward.tokenId.toString()});break;case 2:erc1155Rewards.push({contractAddress:reward.assetContract,tokenId:reward.tokenId.toString(),quantityPerReward:reward.totalAmount.toString()})}return{erc20Rewards,erc721Rewards,erc1155Rewards}}})}})());async toPackContentArgs(metadataWithRewards){const contents=[],numOfRewardUnits=[],{erc20Rewards,erc721Rewards,erc1155Rewards}=metadataWithRewards,provider=this.contractWrapper.getProvider(),owner=await this.contractWrapper.getSignerAddress();for(const erc20 of erc20Rewards){const totalQuantity=(await(0,normalizePriceValue_9851c0eb_browser_esm.n)(provider,erc20.quantityPerReward,erc20.contractAddress)).mul(erc20.totalRewards);if(!await(0,hasERC20Allowance_654a940b_browser_esm.h)(this.contractWrapper,erc20.contractAddress,totalQuantity))throw new Error(`ERC20 token with contract address "${erc20.contractAddress}" does not have enough allowance to transfer.\n\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\n\nawait sdk.getToken("${erc20.contractAddress}").setAllowance("${this.getAddress()}", ${totalQuantity});\n\n`);numOfRewardUnits.push(erc20.totalRewards),contents.push({assetContract:erc20.contractAddress,tokenType:0,totalAmount:totalQuantity,tokenId:0})}for(const erc721 of erc721Rewards){if(!await(0,marketplace_e3129e2f_browser_esm.i)(this.contractWrapper.getProvider(),this.getAddress(),erc721.contractAddress,erc721.tokenId,owner))throw new Error(`ERC721 token "${erc721.tokenId}" with contract address "${erc721.contractAddress}" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getNFTCollection("${erc721.contractAddress}").setApprovalForToken("${this.getAddress()}", ${erc721.tokenId});\n\n`);numOfRewardUnits.push("1"),contents.push({assetContract:erc721.contractAddress,tokenType:1,totalAmount:1,tokenId:erc721.tokenId})}for(const erc1155 of erc1155Rewards){if(!await(0,marketplace_e3129e2f_browser_esm.i)(this.contractWrapper.getProvider(),this.getAddress(),erc1155.contractAddress,erc1155.tokenId,owner))throw new Error(`ERC1155 token "${erc1155.tokenId}" with contract address "${erc1155.contractAddress}" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getEdition("${erc1155.contractAddress}").setApprovalForAll("${this.getAddress()}", true);\n\n`);numOfRewardUnits.push(erc1155.totalRewards),contents.push({assetContract:erc1155.contractAddress,tokenType:2,totalAmount:bignumber.gH.from(erc1155.quantityPerReward).mul(bignumber.gH.from(erc1155.totalRewards)),tokenId:erc1155.tokenId})}return{contents,numOfRewardUnits}}async prepare(method,args,overrides){return transactions_72f9603c_browser_esm.T.fromContractWrapper({contractWrapper:this.contractWrapper,method,args,overrides})}async call(functionName,args,overrides){return this.contractWrapper.call(functionName,args,overrides)}detectVrf(){if((0,contract_appuri_5c40af52_browser_esm.d)(this.contractWrapper,"PackVRF"))return new PackVRF(this.contractWrapper.getSignerOrProvider(),this.contractWrapper.address,this.storage,this.contractWrapper.options,this.chainId)}}}}]);