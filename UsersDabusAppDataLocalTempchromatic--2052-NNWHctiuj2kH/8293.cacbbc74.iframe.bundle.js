"use strict";(self.webpackChunkan_onchain_app_in_100_components=self.webpackChunkan_onchain_app_in_100_components||[]).push([[8293],{"./node_modules/@thirdweb-dev/sdk/dist/drop-claim-conditions-e6f2abbf.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>DropClaimConditions});var ethers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ethersproject/units/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ethersproject/bytes/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),ethers__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@ethersproject/constants/lib.esm/bignumbers.js"),ethers__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@ethersproject/constants/lib.esm/addresses.js"),ethers__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@ethersproject/strings/lib.esm/utf8.js"),fast_deep_equal__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/fast-deep-equal/index.js"),fast_deep_equal__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_0__),_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js"),_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/signature-d3ea643d.browser.esm.js"),_fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-32d08b05.browser.esm.js"),_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/contract-appuri-5c40af52.browser.esm.js"),_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");class DropClaimConditions{constructor(contractWrapper,metadata,storage){this.storage=storage,this.contractWrapper=contractWrapper,this.metadata=metadata}async getActive(options){const[cc,metadata,tokenDecimals]=await Promise.all([this.get(),this.metadata.get(),this.getTokenDecimals()]);return await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.y)(cc,tokenDecimals,this.contractWrapper.getProvider(),metadata.merkle||{},this.storage,options?.withAllowList||!1)}async get(conditionId){if(this.isLegacySinglePhaseDrop(this.contractWrapper)){const contractModel=await this.contractWrapper.read("claimCondition",[]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.z)(contractModel)}if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){const id=void 0!==conditionId?conditionId:await this.contractWrapper.read("getActiveClaimConditionId",[]),contractModel=await this.contractWrapper.read("getClaimConditionById",[id]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.z)(contractModel)}if(this.isNewSinglePhaseDrop(this.contractWrapper)){const contractModel=await this.contractWrapper.read("claimCondition",[]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(contractModel)}if(this.isNewMultiphaseDrop(this.contractWrapper)){const id=void 0!==conditionId?conditionId:await this.contractWrapper.read("getActiveClaimConditionId",[]),contractModel=await this.contractWrapper.read("getClaimConditionById",[id]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(contractModel)}throw new Error("Contract does not support claim conditions")}async getAll(options){if(this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper)){const[currentStartId,countBn]=await this.contractWrapper.read("claimCondition",[]),startId=currentStartId.toNumber(),count=countBn.toNumber(),conditions=[];for(let i=startId;i<startId+count;i++)conditions.push(this.get(i));const[metadata,decimals,...fetchedConditions]=await Promise.all([this.metadata.get(),this.getTokenDecimals(),...conditions]);return Promise.all(fetchedConditions.map((c=>(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.y)(c,decimals,this.contractWrapper.getProvider(),metadata.merkle,this.storage,options?.withAllowList||!1))))}return[await this.getActive(options)]}async canClaim(quantity,addressToCheck){return addressToCheck&&(addressToCheck=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(addressToCheck)),0===(await this.getClaimIneligibilityReasons(quantity,addressToCheck)).length}async getClaimIneligibilityReasons(quantity,addressToCheck){const reasons=[];let activeConditionIndex,claimCondition;if(void 0===addressToCheck)try{addressToCheck=await this.contractWrapper.getSignerAddress()}catch(err){console.warn("failed to get signer address",err)}if(!addressToCheck)return[_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NoWallet];const[resolvedAddress,decimals]=await Promise.all([(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(addressToCheck),this.getTokenDecimals()]),quantityWithDecimals=ethers__WEBPACK_IMPORTED_MODULE_3__.parseUnits(_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.cw.parse(quantity),decimals);try{claimCondition=await this.getActive()}catch(err){return(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.B)(err,"!CONDITION")||(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.B)(err,"no active mint condition")||(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.B)(err,"DropNoActiveCondition")?(reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NoClaimConditionSet),reasons):(console.warn("failed to get active claim condition",err),reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.Unknown),reasons)}if("unlimited"!==claimCondition.availableSupply){if(ethers__WEBPACK_IMPORTED_MODULE_3__.parseUnits(claimCondition.availableSupply,decimals).lt(quantityWithDecimals))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughSupply),reasons}const hasAllowList=ethers__WEBPACK_IMPORTED_MODULE_4__.stripZeros(claimCondition.merkleRootHash).length>0;let allowListEntry=null;if(hasAllowList){if(allowListEntry=await this.getClaimerProofs(resolvedAddress),!allowListEntry&&(this.isLegacySinglePhaseDrop(this.contractWrapper)||this.isLegacyMultiPhaseDrop(this.contractWrapper)))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons;if(allowListEntry)try{const claimVerification=await this.prepareClaim(quantity,!1,decimals,resolvedAddress);let validMerkleProof;if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){if(activeConditionIndex=await this.contractWrapper.read("getActiveClaimConditionId",[]),[validMerkleProof]=await this.contractWrapper.read("verifyClaimMerkleProof",[activeConditionIndex,resolvedAddress,quantity,claimVerification.proofs,claimVerification.maxClaimable]),!validMerkleProof)return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons}else if(this.isLegacySinglePhaseDrop(this.contractWrapper)){if([validMerkleProof]=await this.contractWrapper.read("verifyClaimMerkleProof",[resolvedAddress,quantity,{proof:claimVerification.proofs,maxQuantityInAllowlist:claimVerification.maxClaimable}]),!validMerkleProof)return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons}else this.isNewSinglePhaseDrop(this.contractWrapper)?await this.contractWrapper.read("verifyClaim",[resolvedAddress,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,quantityLimitPerWallet:claimVerification.maxClaimable,currency:claimVerification.currencyAddressInProof,pricePerToken:claimVerification.priceInProof}]):this.isNewMultiphaseDrop(this.contractWrapper)&&(activeConditionIndex=await this.contractWrapper.read("getActiveClaimConditionId",[]),await this.contractWrapper.read("verifyClaim",[activeConditionIndex,resolvedAddress,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,quantityLimitPerWallet:claimVerification.maxClaimable,currency:claimVerification.currencyAddressInProof,pricePerToken:claimVerification.priceInProof}]))}catch(e){console.warn("Merkle proof verification failed:","reason"in e?e.reason||e.errorName:e);switch(e.reason||e.errorName){case"!Qty":case"DropClaimExceedLimit":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.OverMaxClaimablePerWallet);break;case"!PriceOrCurrency":case"DropClaimInvalidTokenPrice":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.WrongPriceOrCurrency);break;case"!MaxSupply":case"DropClaimExceedMaxSupply":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughSupply);break;case"cant claim yet":case"DropClaimNotStarted":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.ClaimPhaseNotStarted);break;default:reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed)}return reasons}}if(this.isNewSinglePhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper)){let claimedSupply=ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(0),maxClaimable=(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.D)(claimCondition.maxClaimablePerWallet,decimals);try{claimedSupply=await this.getSupplyClaimedByWallet(resolvedAddress)}catch(e){}if(allowListEntry&&(maxClaimable=(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.D)(allowListEntry.maxClaimable,decimals)),maxClaimable.gt(0)&&maxClaimable.lt(claimedSupply.add(quantityWithDecimals)))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.OverMaxClaimablePerWallet),reasons;if((!hasAllowList||hasAllowList&&!allowListEntry)&&(maxClaimable.lte(claimedSupply)||maxClaimable.eq(0)))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons}if(this.isLegacySinglePhaseDrop(this.contractWrapper)||this.isLegacyMultiPhaseDrop(this.contractWrapper)){let[lastClaimedTimestamp,timestampForNextClaim]=[ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(0),ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(0)];this.isLegacyMultiPhaseDrop(this.contractWrapper)?(activeConditionIndex=await this.contractWrapper.read("getActiveClaimConditionId",[]),[lastClaimedTimestamp,timestampForNextClaim]=await this.contractWrapper.read("getClaimTimestamp",[activeConditionIndex,resolvedAddress])):this.isLegacySinglePhaseDrop(this.contractWrapper)&&([lastClaimedTimestamp,timestampForNextClaim]=await this.contractWrapper.read("getClaimTimestamp",[resolvedAddress]));const now=ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(Date.now()).div(1e3);if(lastClaimedTimestamp.gt(0)&&now.lt(timestampForNextClaim))return timestampForNextClaim.eq(ethers__WEBPACK_IMPORTED_MODULE_6__.Is)?reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AlreadyClaimed):reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.WaitBeforeNextClaimTransaction),reasons}if(claimCondition.price.gt(0)&&(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.d8)()){const totalPrice=claimCondition.price.mul(ethers__WEBPACK_IMPORTED_MODULE_5__.gH.from(quantity)),provider=this.contractWrapper.getProvider();if((0,_fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.i)(claimCondition.currencyAddress)){(await provider.getBalance(resolvedAddress)).lt(totalPrice)&&reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughTokens)}else{const ERC20Abi=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json",19))).default,erc20=new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.cs(provider,claimCondition.currencyAddress,ERC20Abi,{},this.storage);(await erc20.read("balanceOf",[resolvedAddress])).lt(totalPrice)&&reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughTokens)}}return reasons}async getClaimerProofs(claimerAddress,claimConditionId){const merkleRoot=(await this.get(claimConditionId)).merkleRoot;if(ethers__WEBPACK_IMPORTED_MODULE_4__.stripZeros(merkleRoot).length>0){const[metadata,resolvedAddress]=await Promise.all([this.metadata.get(),(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(claimerAddress)]);return await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(resolvedAddress,merkleRoot.toString(),metadata.merkle,this.contractWrapper.getProvider(),this.storage,this.getSnapshotFormatVersion())}return null}async getSupplyClaimedByWallet(walletAddress){const resolvedAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(walletAddress);if(this.isNewSinglePhaseDrop(this.contractWrapper))return await this.contractWrapper.read("getSupplyClaimedByWallet",[resolvedAddress]);if(this.isNewMultiphaseDrop(this.contractWrapper)){const activeClaimConditionId=await this.contractWrapper.read("getActiveClaimConditionId",[]);return await this.contractWrapper.read("getSupplyClaimedByWallet",[activeClaimConditionId,resolvedAddress])}throw new Error("This contract does not support the getSupplyClaimedByWallet function")}set=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.f)((()=>{var _this=this;return async function(claimConditionInputs){let resetClaimEligibilityForAll=arguments.length>1&&void 0!==arguments[1]&&arguments[1],claimConditionsProcessed=claimConditionInputs;if(_this.isLegacySinglePhaseDrop(_this.contractWrapper)||_this.isNewSinglePhaseDrop(_this.contractWrapper))if(resetClaimEligibilityForAll=!0,0===claimConditionInputs.length)claimConditionsProcessed=[{startTime:new Date(0),currencyAddress:ethers__WEBPACK_IMPORTED_MODULE_9__.L,price:0,maxClaimableSupply:0,maxClaimablePerWallet:0,waitInSeconds:0,merkleRootHash:ethers__WEBPACK_IMPORTED_MODULE_4__.hexZeroPad([0],32),snapshot:[]}];else if(claimConditionInputs.length>1)throw new Error("Single phase drop contract cannot have multiple claim conditions, only one is allowed");(_this.isNewSinglePhaseDrop(_this.contractWrapper)||_this.isNewMultiphaseDrop(_this.contractWrapper))&&claimConditionsProcessed.forEach((cc=>{if(cc.snapshot&&cc.snapshot.length>0&&(void 0===cc.maxClaimablePerWallet||"unlimited"===cc.maxClaimablePerWallet))throw new Error("maxClaimablePerWallet must be set to a specific value when an allowlist is set.\nExample: Set it to 0 to only allow addresses in the allowlist to claim the amount specified in the allowlist.\ncontract.claimConditions.set([{ snapshot: [{ address: '0x...', maxClaimable: 1 }], maxClaimablePerWallet: 0 }])");if(cc.snapshot&&cc.snapshot.length>0&&"0"===cc.maxClaimablePerWallet?.toString()&&0===cc.snapshot.map((s=>"string"==typeof s?0:Number(s.maxClaimable?.toString()||0))).reduce(((acc,current)=>acc+current),0))throw new Error("maxClaimablePerWallet is set to 0, and all addresses in the allowlist have max claimable 0. This means that no one can claim.")}));const{snapshotInfos,sortedConditions}=await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.H)(claimConditionsProcessed,await _this.getTokenDecimals(),_this.contractWrapper.getProvider(),_this.storage,_this.getSnapshotFormatVersion()),merkleInfo={};snapshotInfos.forEach((s=>{merkleInfo[s.merkleRoot]=s.snapshotUri}));const metadata=await _this.metadata.get(),encoded=[];if(!fast_deep_equal__WEBPACK_IMPORTED_MODULE_0___default()(metadata.merkle,merkleInfo)){const mergedMetadata=await _this.metadata.parseInputMetadata({...metadata,merkle:merkleInfo}),contractURI=await _this.metadata._parseAndUploadMetadata(mergedMetadata);if(!(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.h)("setContractURI",_this.contractWrapper))throw new Error("Setting a merkle root requires implementing ContractMetadata in your contract to support storing a merkle root.");{const contractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.C(_this.contractWrapper);encoded.push(contractEncoder.encode("setContractURI",[contractURI]))}}const cw=_this.contractWrapper,baseContractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.C(cw);if(_this.isLegacySinglePhaseDrop(cw)){const contractEncoderLegacy=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.C(cw);encoded.push(contractEncoderLegacy.encode("setClaimConditions",[(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.I)(sortedConditions[0]),resetClaimEligibilityForAll]))}else if(_this.isLegacyMultiPhaseDrop(cw))encoded.push(baseContractEncoder.encode("setClaimConditions",[sortedConditions.map(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.I),resetClaimEligibilityForAll]));else if(_this.isNewSinglePhaseDrop(cw))encoded.push(baseContractEncoder.encode("setClaimConditions",[(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.J)(sortedConditions[0]),resetClaimEligibilityForAll]));else{if(!_this.isNewMultiphaseDrop(cw))throw new Error("Contract does not support claim conditions");encoded.push(baseContractEncoder.encode("setClaimConditions",[sortedConditions.map(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.J),resetClaimEligibilityForAll]))}if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.h)("multicall",_this.contractWrapper))return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.T.fromContractWrapper({contractWrapper:_this.contractWrapper,method:"multicall",args:[encoded]});throw new Error("Contract does not support multicall")}})());update=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.f)((async(index,claimConditionInput)=>{const existingConditions=await this.getAll(),newConditionInputs=await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.K)(index,claimConditionInput,existingConditions);return await this.set.prepare(newConditionInputs)}));async getTokenDecimals(){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper,"ERC20")?this.contractWrapper.read("decimals",[]):Promise.resolve(0)}async prepareClaim(quantity,checkERC20Allowance){let decimals=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,address=arguments.length>3?arguments[3]:void 0;const[addressToClaim,activeClaimConditions]=await Promise.all([address||this.contractWrapper.getSignerAddress(),this.getActive()]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.E)(addressToClaim,quantity,activeClaimConditions,(async()=>(await this.metadata.get()).merkle),decimals,this.contractWrapper,this.storage,checkERC20Allowance,this.getSnapshotFormatVersion())}async getClaimArguments(destinationAddress,quantity,claimVerification){const resolvedAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(destinationAddress);return this.isLegacyMultiPhaseDrop(this.contractWrapper)?[resolvedAddress,quantity,claimVerification.currencyAddress,claimVerification.price,claimVerification.proofs,claimVerification.maxClaimable]:this.isLegacySinglePhaseDrop(this.contractWrapper)?[resolvedAddress,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,maxQuantityInAllowlist:claimVerification.maxClaimable},ethers__WEBPACK_IMPORTED_MODULE_11__.YW("")]:[resolvedAddress,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,quantityLimitPerWallet:claimVerification.maxClaimable,pricePerToken:claimVerification.priceInProof,currency:claimVerification.currencyAddressInProof},ethers__WEBPACK_IMPORTED_MODULE_11__.YW("")]}async getClaimTransaction(destinationAddress,quantity,options){if(options?.pricePerToken)throw new Error("Price per token is be set via claim conditions by calling `contract.erc721.claimConditions.set()`");const claimVerification=await this.prepareClaim(quantity,void 0===options?.checkERC20Allowance||options.checkERC20Allowance,await this.getTokenDecimals());return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"claim",args:await this.getClaimArguments(destinationAddress,quantity,claimVerification),overrides:claimVerification.overrides})}isNewSinglePhaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC721ClaimConditionsV2")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC20ClaimConditionsV2")}isNewMultiphaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC721ClaimPhasesV2")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC20ClaimPhasesV2")}isLegacySinglePhaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC721ClaimConditionsV1")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC20ClaimConditionsV1")}isLegacyMultiPhaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC721ClaimPhasesV1")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(contractWrapper,"ERC20ClaimPhasesV1")}getSnapshotFormatVersion(){return this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isLegacySinglePhaseDrop(this.contractWrapper)?_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.F.V1:_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.F.V2}}}}]);