"use strict";(self.webpackChunkan_onchain_app_in_100_components=self.webpackChunkan_onchain_app_in_100_components||[]).push([[2709],{"./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function normalizeChainId(chainId){return"string"==typeof chainId?Number.parseInt(chainId,"0x"===chainId.trim().substring(0,2)?16:10):"bigint"==typeof chainId?Number(chainId):chainId}__webpack_require__.d(__webpack_exports__,{n:()=>normalizeChainId})},"./node_modules/@thirdweb-dev/wallets/evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{LocalWalletConnector:()=>LocalWalletConnector});var _dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/defineProperty-350fc508.browser.esm.js"),_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js"),_dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/connector-05689d68.browser.esm.js"),_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js"),_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js"),ethers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ethersproject/abstract-signer/lib.esm/index.js"),ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/ethers/lib/utils.js");__webpack_require__("./node_modules/eventemitter3/index.mjs");class WrappedSigner extends ethers__WEBPACK_IMPORTED_MODULE_1__.Signer{constructor(signer){super(),this.signer=signer,(0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this,"provider",signer.provider)}async getAddress(){return await this.signer.getAddress()}async signMessage(message){return await this.signer.signMessage(message)}async signTransaction(transaction){return await this.signer.signTransaction(transaction)}connect(provider){return new WrappedSigner(this.signer.connect(provider))}_signTypedData(domain,types,value){return this.signer._signTypedData(domain,types,value)}async sendTransaction(transaction){if(!this.provider)throw new Error("Provider not found");const txWithGas={...await(0,_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_3__.g)(this.provider),...transaction};return await this.signer.sendTransaction(txWithGas)}}class LocalWalletConnector extends _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_4__.C{constructor(options){super(),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this,"id","local_wallet"),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this,"name","Local Wallet"),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this,"shimDisconnectKey","localWallet.shimDisconnect"),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__._)(this,"onChainChanged",(chainId=>{const id=(0,_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.n)(chainId),unsupported=!this.options.chains.find((c=>c.chainId===id));this.emit("change",{chain:{id,unsupported}})})),this.options=options}async connect(args){args.chainId&&this.switchChain(args.chainId);const signer=await this.getSigner();return await signer.getAddress()}async disconnect(){this._provider=void 0,this._signer=void 0}async getAddress(){const signer=await this.getSigner();if(!signer)throw new Error("No signer found");return await signer.getAddress()}async isConnected(){try{return!!await this.getAddress()}catch{return!1}}async getProvider(){return this._provider||(this._provider=(0,_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_7__.a_)(this.options.chain,{clientId:this.options.clientId,secretKey:this.options.secretKey})),this._provider}async getSigner(){if(!this._signer){const provider=await this.getProvider();this._signer=getSignerFromEthersWallet(this.options.ethersWallet,provider)}return this._signer}async switchChain(chainId){const chain=this.options.chains.find((c=>c.chainId===chainId));if(!chain)throw new Error(`Chain not found for chainId ${chainId}, please add it to the chains property when creating this wallet`);this._provider=(0,_thirdweb_dev_sdk__WEBPACK_IMPORTED_MODULE_7__.a_)(chain,{clientId:this.options.clientId,secretKey:this.options.secretKey}),this._signer=getSignerFromEthersWallet(this.options.ethersWallet,this._provider),this.onChainChanged(chainId)}async setupListeners(){}updateChains(chains){this.options.chains=chains}}function getSignerFromEthersWallet(ethersWallet,provider){let signer=ethersWallet;return provider&&(signer=ethersWallet.connect(provider)),new WrappedSigner(signer)}}}]);