"use strict";(self.webpackChunkan_onchain_app_in_100_components=self.webpackChunkan_onchain_app_in_100_components||[]).push([[6947],{"./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function normalizeChainId(chainId){return"string"==typeof chainId?Number.parseInt(chainId,"0x"===chainId.trim().substring(0,2)?16:10):"bigint"==typeof chainId?Number(chainId):chainId}__webpack_require__.d(__webpack_exports__,{n:()=>normalizeChainId})},"./node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{EmbeddedWalletConnector:()=>EmbeddedWalletConnector});var _dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/defineProperty-350fc508.browser.esm.js"),ethers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ethersproject/address/lib.esm/index.js"),_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js"),_dist_walletIds_dff6dced_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/walletIds-dff6dced.browser.esm.js"),_dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/connector-05689d68.browser.esm.js"),_dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@thirdweb-dev/wallets/dist/embedded-wallet-e375380a.browser.esm.js"),console=(__webpack_require__("./node_modules/eventemitter3/index.mjs"),__webpack_require__("./node_modules/console-browserify/index.js"));class EmbeddedWalletConnector extends _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C{constructor(options){super(),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"id",_dist_walletIds_dff6dced_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w.paper),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"name","Embedded Wallet"),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"ready",!0),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"user",null),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onAccountsChanged",(async accounts=>{0===accounts.length?await this.onDisconnect():this.emit("change",{account:ethers__WEBPACK_IMPORTED_MODULE_4__.getAddress(accounts[0])})})),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onChainChanged",(chainId=>{const id=(0,_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.n)(chainId),unsupported=-1===this.options.chains.findIndex((c=>c.chainId===id));this.emit("change",{chain:{id,unsupported}})})),(0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this,"onDisconnect",(async()=>{this.emit("disconnect")})),this.options=options}getEmbeddedWalletSDK(){return this._embeddedWalletSdk||(this._embeddedWalletSdk=new _dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.E({clientId:this.options.clientId,chain:"Ethereum",onAuthSuccess:this.options.onAuthSuccess})),this._embeddedWalletSdk}async connect(args){if(args){if(!args.authResult)throw new Error("Missing authData - call authenticate() first with your authentication strategy");if(!args.authResult.user)throw new Error("Missing authData.user - call authenticate() first with your authentication strategy");this.user=args.authResult.user}else{const result=await this.authenticate({strategy:"iframe"});if(!result.user)throw new Error("Error connecting User");this.user=result.user}return args?.chainId&&this.switchChain(args.chainId),this.getAddress()}async disconnect(){const paper=this._embeddedWalletSdk;await(paper?.auth.logout()),this._signer=void 0,this._embeddedWalletSdk=void 0,this.user=null}async getAddress(){if(!this.user)throw new Error("Embedded Wallet is not connected");return await this.getSigner().then((signer=>signer.getAddress()))}async isConnected(){try{return!!await this.getAddress()}catch(e){return!1}}async getProvider(){const signer=await this.getSigner();if(!signer.provider)throw new Error("Provider not found");return signer.provider}async getSigner(){if(this._signer)return this._signer;const user=await this.getUser(),signer=await user.wallet.getEthersJsSigner({rpcEndpoint:this.options.chain.rpc[0]||""});if(!signer)throw new Error("Signer not found");return this._signer=signer,signer}async isAuthorized(){return!1}async switchChain(chainId){const chain=this.options.chains.find((c=>c.chainId===chainId));if(!chain)throw new Error("Chain not configured");try{await(this.user?.wallet.setChain({chain:"Ethereum"})),this._signer=await(this.user?.wallet.getEthersJsSigner({rpcEndpoint:chain.rpc[0]||""})),this.emit("change",{chain:{id:chainId,unsupported:!1}})}catch(e){console.warn("Failed to switch chain",e)}}async setupListeners(){return Promise.resolve()}updateChains(chains){this.options.chains=chains}async getUser(){if(!this.user||!this.user.wallet||!this.user.wallet.getEthersJsSigner){const embeddedWalletSdk=this.getEmbeddedWalletSDK(),user=await embeddedWalletSdk.getUser();if(user.status!==_dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.U.LOGGED_IN_WALLET_INITIALIZED)throw new Error("Embedded Wallet is not authenticated, please authenticate first");this.user=user}return this.user}async getEmail(){return(await this.getUser()).authDetails.email}async getPhoneNumber(){return(await this.getUser()).authDetails.phoneNumber}async getRecoveryInformation(){return(await this.getUser()).authDetails}async sendVerificationEmail(_ref){let{email}=_ref;return this.getEmbeddedWalletSDK().auth.sendEmailLoginOtp({email})}async sendVerificationSms(_ref2){let{phoneNumber}=_ref2;return this.getEmbeddedWalletSDK().auth.sendSmsLoginOtp({phoneNumber})}async authenticate(params){const ewSDK=this.getEmbeddedWalletSDK(),strategy=params.strategy;switch(strategy){case"email_verification":return await ewSDK.auth.verifyEmailLoginOtp({email:params.email,otp:params.verificationCode,recoveryCode:params.recoveryCode});case"phone_number_verification":return await ewSDK.auth.verifySmsLoginOtp({phoneNumber:params.phoneNumber,otp:params.verificationCode,recoveryCode:params.recoveryCode});case"apple":case"facebook":case"google":{const oauthProvider=oauthStrategyToAuthProvider[strategy];return ewSDK.auth.loginWithOauth({oauthProvider,closeOpenedWindow:params.closeOpenedWindow,openedWindow:params.openedWindow})}case"jwt":return ewSDK.auth.loginWithCustomJwt({jwt:params.jwt,encryptionKey:params.encryptionKey});case"auth_endpoint":return ewSDK.auth.loginWithCustomAuthEndpoint({payload:params.payload,encryptionKey:params.encryptionKey});case"iframe_email_verification":return ewSDK.auth.loginWithEmailOtp({email:params.email});case"iframe":return ewSDK.auth.loginWithModal();default:!function assertUnreachable(x){throw new Error("Invalid param: "+x)}(strategy)}}}const oauthStrategyToAuthProvider={google:_dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c.GOOGLE,facebook:_dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c.FACEBOOK,apple:_dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c.APPLE}}}]);