"use strict";(self.webpackChunkan_onchain_app_in_100_components=self.webpackChunkan_onchain_app_in_100_components||[]).push([[8243],{"./node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>ContractInterceptor});class ContractInterceptor{constructor(contractWrapper){this.contractWrapper=contractWrapper}overrideNextTransaction(hook){this.contractWrapper.withTransactionOverride(hook)}}},"./node_modules/@thirdweb-dev/sdk/dist/erc-1155-7ce9bee1.browser.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>DropErc1155ClaimConditions,E:()=>Erc1155,a:()=>Erc1155SignatureMintable});var ethers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),ethers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ethersproject/bytes/lib.esm/index.js"),ethers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@ethersproject/constants/lib.esm/bignumbers.js"),ethers__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@ethersproject/constants/lib.esm/addresses.js"),ethers__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@ethersproject/strings/lib.esm/utf8.js"),_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js"),_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/assertEnabled-d1700f0b.browser.esm.js"),_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/contract-appuri-5c40af52.browser.esm.js"),_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/QueryParams-32a56510.browser.esm.js"),_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js"),zod__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/zod/lib/index.mjs"),_contract_owner_49e75547_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/contract-owner-49e75547.browser.esm.js"),fast_deep_equal__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/fast-deep-equal/index.js"),fast_deep_equal__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_0__),_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/signature-d3ea643d.browser.esm.js"),_fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-32d08b05.browser.esm.js"),tiny_invariant__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/tiny-invariant/dist/esm/tiny-invariant.js"),_normalizePriceValue_9851c0eb_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/normalizePriceValue-9851c0eb.browser.esm.js"),_setErc20Allowance_7f76f677_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@thirdweb-dev/sdk/dist/setErc20Allowance-7f76f677.browser.esm.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");class DropErc1155ClaimConditions{constructor(contractWrapper,metadata,storage){this.storage=storage,this.contractWrapper=contractWrapper,this.metadata=metadata}async getActive(tokenId,options){const mc=await this.get(tokenId),metadata=await this.metadata.get();return await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.y)(mc,0,this.contractWrapper.getProvider(),metadata.merkle,this.storage,options?.withAllowList||!1)}async get(tokenId,conditionId){if(this.isLegacySinglePhaseDrop(this.contractWrapper)){const contractModel=await this.contractWrapper.read("claimCondition",[tokenId]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.z)(contractModel)}if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){const id=void 0!==conditionId?conditionId:await this.contractWrapper.read("getActiveClaimConditionId",[tokenId]),contractModel=await this.contractWrapper.read("getClaimConditionById",[tokenId,id]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.z)(contractModel)}if(this.isNewSinglePhaseDrop(this.contractWrapper)){const contractModel=await this.contractWrapper.read("claimCondition",[tokenId]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(contractModel)}if(this.isNewMultiphaseDrop(this.contractWrapper)){const id=void 0!==conditionId?conditionId:await this.contractWrapper.read("getActiveClaimConditionId",[tokenId]),contractModel=await this.contractWrapper.read("getClaimConditionById",[tokenId,id]);return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(contractModel)}throw new Error("Contract does not support claim conditions")}async getAll(tokenId,options){if(this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper)){const claimCondition=await this.contractWrapper.read("claimCondition",[tokenId]),startId=claimCondition.currentStartId.toNumber(),count=claimCondition.count.toNumber(),conditions=[];for(let i=startId;i<startId+count;i++)conditions.push(await this.get(tokenId,i));const metadata=await this.metadata.get();return Promise.all(conditions.map((c=>(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.y)(c,0,this.contractWrapper.getProvider(),metadata.merkle,this.storage,options?.withAllowList||!1))))}return[await this.getActive(tokenId,options)]}async canClaim(tokenId,quantity,addressToCheck){return addressToCheck&&(addressToCheck=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(addressToCheck)),0===(await this.getClaimIneligibilityReasons(tokenId,quantity,addressToCheck)).length}async getClaimIneligibilityReasons(tokenId,quantity,addressToCheck){const reasons=[];let activeConditionIndex,claimCondition;if(void 0===addressToCheck)try{addressToCheck=await this.contractWrapper.getSignerAddress()}catch(err){console.warn("failed to get signer address",err)}if(!addressToCheck)return[_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NoWallet];const resolvedAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(addressToCheck);try{claimCondition=await this.getActive(tokenId)}catch(err){return(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.B)(err,"!CONDITION")||(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.B)(err,"no active mint condition")||(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.B)(err,"DropNoActiveCondition")?(reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NoClaimConditionSet),reasons):(reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.Unknown),reasons)}if("unlimited"!==claimCondition.availableSupply&&ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(claimCondition.availableSupply).lt(quantity))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughSupply),reasons;const hasAllowList=ethers__WEBPACK_IMPORTED_MODULE_4__.stripZeros(claimCondition.merkleRootHash).length>0;let allowListEntry=null;if(hasAllowList){if(allowListEntry=await this.getClaimerProofs(tokenId,resolvedAddress),!allowListEntry&&(this.isLegacySinglePhaseDrop(this.contractWrapper)||this.isLegacyMultiPhaseDrop(this.contractWrapper)))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons;if(allowListEntry)try{const claimVerification=await this.prepareClaim(tokenId,quantity,!1,resolvedAddress);let validMerkleProof;if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){if(activeConditionIndex=await this.contractWrapper.read("getActiveClaimConditionId",[tokenId]),[validMerkleProof]=await this.contractWrapper.read("verifyClaimMerkleProof",[activeConditionIndex,resolvedAddress,tokenId,quantity,claimVerification.proofs,claimVerification.maxClaimable]),!validMerkleProof)return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons}else if(this.isLegacySinglePhaseDrop(this.contractWrapper)){if([validMerkleProof]=await this.contractWrapper.read("verifyClaimMerkleProof",[tokenId,resolvedAddress,quantity,{proof:claimVerification.proofs,maxQuantityInAllowlist:claimVerification.maxClaimable}]),!validMerkleProof)return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons}else this.isNewSinglePhaseDrop(this.contractWrapper)?await this.contractWrapper.read("verifyClaim",[tokenId,resolvedAddress,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,quantityLimitPerWallet:claimVerification.maxClaimable,currency:claimVerification.currencyAddressInProof,pricePerToken:claimVerification.priceInProof}]):this.isNewMultiphaseDrop(this.contractWrapper)&&(activeConditionIndex=await this.contractWrapper.read("getActiveClaimConditionId",[tokenId]),await this.contractWrapper.read("verifyClaim",[activeConditionIndex,resolvedAddress,tokenId,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,quantityLimitPerWallet:claimVerification.maxClaimable,currency:claimVerification.currencyAddressInProof,pricePerToken:claimVerification.priceInProof}]))}catch(e){console.warn("Merkle proof verification failed:","reason"in e?e.reason||e.errorName:e);switch(e.reason||e.errorName){case"!Qty":case"DropClaimExceedLimit":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.OverMaxClaimablePerWallet);break;case"!PriceOrCurrency":case"DropClaimInvalidTokenPrice":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.WrongPriceOrCurrency);break;case"!MaxSupply":case"DropClaimExceedMaxSupply":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughSupply);break;case"cant claim yet":case"DropClaimNotStarted":reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.ClaimPhaseNotStarted);break;default:reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed)}return reasons}}if(this.isNewSinglePhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper)){let claimedSupply=ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(0),maxClaimable=(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.D)(claimCondition.maxClaimablePerWallet,0);try{claimedSupply=await this.getSupplyClaimedByWallet(tokenId,resolvedAddress)}catch(e){}if(allowListEntry&&(maxClaimable=(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.D)(allowListEntry.maxClaimable,0)),maxClaimable.gt(0)&&maxClaimable.lt(claimedSupply.add(quantity)))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.OverMaxClaimablePerWallet),reasons;if((!hasAllowList||hasAllowList&&!allowListEntry)&&(maxClaimable.lte(claimedSupply)||maxClaimable.eq(0)))return reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AddressNotAllowed),reasons}let[lastClaimedTimestamp,timestampForNextClaim]=[ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(0),ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(0)];this.isLegacyMultiPhaseDrop(this.contractWrapper)?(activeConditionIndex=await this.contractWrapper.read("getActiveClaimConditionId",[tokenId]),[lastClaimedTimestamp,timestampForNextClaim]=await this.contractWrapper.read("getClaimTimestamp",[tokenId,activeConditionIndex,resolvedAddress])):this.isLegacySinglePhaseDrop(this.contractWrapper)&&([lastClaimedTimestamp,timestampForNextClaim]=await this.contractWrapper.read("getClaimTimestamp",[tokenId,resolvedAddress]));const now=ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(Date.now()).div(1e3);if(lastClaimedTimestamp.gt(0)&&now.lt(timestampForNextClaim))return timestampForNextClaim.eq(ethers__WEBPACK_IMPORTED_MODULE_5__.Is)?reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.AlreadyClaimed):reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.WaitBeforeNextClaimTransaction),reasons;if(claimCondition.price.gt(0)&&(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.d8)()){const totalPrice=claimCondition.price.mul(quantity),provider=this.contractWrapper.getProvider();if((0,_fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.i)(claimCondition.currencyAddress)){(await provider.getBalance(resolvedAddress)).lt(totalPrice)&&reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughTokens)}else{const IERC20ABI=(await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json",19))).default,erc20=new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.cs(provider,claimCondition.currencyAddress,IERC20ABI,{},this.storage);(await erc20.read("balanceOf",[resolvedAddress])).lt(totalPrice)&&reasons.push(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C.NotEnoughTokens)}}return reasons}async getClaimerProofs(tokenId,claimerAddress,claimConditionId){const merkleRoot=(await this.get(tokenId,claimConditionId)).merkleRoot;if(ethers__WEBPACK_IMPORTED_MODULE_4__.stripZeros(merkleRoot).length>0){const metadata=await this.metadata.get(),resolvedAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(claimerAddress);return await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(resolvedAddress,merkleRoot.toString(),metadata.merkle,this.contractWrapper.getProvider(),this.storage,this.getSnapshotFormatVersion())}return null}async getSupplyClaimedByWallet(tokenId,walletAddress){const resolvedAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(walletAddress);if(this.isNewSinglePhaseDrop(this.contractWrapper))return await this.contractWrapper.read("getSupplyClaimedByWallet",[tokenId,resolvedAddress]);if(this.isNewMultiphaseDrop(this.contractWrapper)){const activeClaimConditionId=await this.contractWrapper.read("getActiveClaimConditionId",[tokenId]);return await this.contractWrapper.read("getSupplyClaimedByWallet",[tokenId,activeClaimConditionId,resolvedAddress])}throw new Error("This contract does not support the getSupplyClaimedByWallet function")}set=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((()=>{var _this=this;return async function(tokenId,claimConditionInputs){let resetClaimEligibilityForAll=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return _this.setBatch.prepare([{tokenId,claimConditions:claimConditionInputs}],resetClaimEligibilityForAll)}})());setBatch=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((()=>{var _this2=this;return async function(claimConditionsForToken){let resetClaimEligibilityForAll=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const merkleInfo={},processedClaimConditions=await Promise.all(claimConditionsForToken.map((async _ref=>{let{tokenId,claimConditions}=_ref,claimConditionsProcessed=claimConditions;if(_this2.isLegacySinglePhaseDrop(_this2.contractWrapper))if(resetClaimEligibilityForAll=!0,0===claimConditions.length)claimConditionsProcessed=[{startTime:new Date(0),currencyAddress:ethers__WEBPACK_IMPORTED_MODULE_8__.L,price:0,maxClaimableSupply:0,maxClaimablePerWallet:0,waitInSeconds:0,merkleRootHash:ethers__WEBPACK_IMPORTED_MODULE_4__.hexZeroPad([0],32),snapshot:[]}];else if(claimConditions.length>1)throw new Error("Single phase drop contract cannot have multiple claim conditions, only one is allowed");(_this2.isNewSinglePhaseDrop(_this2.contractWrapper)||_this2.isNewMultiphaseDrop(_this2.contractWrapper))&&claimConditionsProcessed.forEach((cc=>{if(cc.snapshot&&cc.snapshot.length>0&&(void 0===cc.maxClaimablePerWallet||"unlimited"===cc.maxClaimablePerWallet))throw new Error("maxClaimablePerWallet must be set to a specific value when an allowlist is set.\nSet it to 0 to only allow addresses in the allowlist to claim the amount specified in the allowlist.\n\nex:\ncontract.claimConditions.set(tokenId, [{ snapshot: [{ address: '0x...', maxClaimable: 1 }], maxClaimablePerWallet: 0 }])");if(cc.snapshot&&cc.snapshot.length>0&&"0"===cc.maxClaimablePerWallet?.toString()&&0===cc.snapshot.map((s=>"string"==typeof s?0:Number(s.maxClaimable?.toString()||0))).reduce(((acc,current)=>acc+current),0))throw new Error("maxClaimablePerWallet is set to 0, and all addresses in the allowlist have max claimable 0. This means that no one can claim.")}));const{snapshotInfos,sortedConditions}=await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.H)(claimConditionsProcessed,0,_this2.contractWrapper.getProvider(),_this2.storage,_this2.getSnapshotFormatVersion());return snapshotInfos.forEach((s=>{merkleInfo[s.merkleRoot]=s.snapshotUri})),{tokenId,sortedConditions}}))),metadata=await _this2.metadata.get(),encoded=[];for(const key of Object.keys(metadata.merkle||{}))merkleInfo[key]=metadata.merkle[key];if(!fast_deep_equal__WEBPACK_IMPORTED_MODULE_0___default()(metadata.merkle,merkleInfo)){const mergedMetadata=await _this2.metadata.parseInputMetadata({...metadata,merkle:merkleInfo}),contractURI=await _this2.metadata._parseAndUploadMetadata(mergedMetadata);if(!(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.h)("setContractURI",_this2.contractWrapper))throw new Error("Setting a merkle root requires implementing ContractMetadata in your contract to support storing a merkle root.");{const contractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(_this2.contractWrapper);encoded.push(contractEncoder.encode("setContractURI",[contractURI]))}}if(processedClaimConditions.forEach((_ref2=>{let{tokenId,sortedConditions}=_ref2;const baseContractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(_this2.contractWrapper);if(_this2.isLegacySinglePhaseDrop(_this2.contractWrapper)){const legacyContractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(_this2.contractWrapper);encoded.push(legacyContractEncoder.encode("setClaimConditions",[tokenId,(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.I)(sortedConditions[0]),resetClaimEligibilityForAll]))}else if(_this2.isLegacyMultiPhaseDrop(_this2.contractWrapper))encoded.push(baseContractEncoder.encode("setClaimConditions",[tokenId,sortedConditions.map(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.I),resetClaimEligibilityForAll]));else if(_this2.isNewSinglePhaseDrop(_this2.contractWrapper))encoded.push(baseContractEncoder.encode("setClaimConditions",[tokenId,(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.J)(sortedConditions[0]),resetClaimEligibilityForAll]));else{if(!_this2.isNewMultiphaseDrop(_this2.contractWrapper))throw new Error("Contract does not support claim conditions");encoded.push(baseContractEncoder.encode("setClaimConditions",[tokenId,sortedConditions.map(_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.J),resetClaimEligibilityForAll]))}})),(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.h)("multicall",_this2.contractWrapper))return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:_this2.contractWrapper,method:"multicall",args:[encoded]});throw new Error("Contract does not support multicall")}})());update=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenId,index,claimConditionInput)=>{const existingConditions=await this.getAll(tokenId),newConditionInputs=await(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.K)(index,claimConditionInput,existingConditions);return await this.set.prepare(tokenId,newConditionInputs)}));async prepareClaim(tokenId,quantity,checkERC20Allowance,address){const addressToClaim=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(address||await this.contractWrapper.getSignerAddress());return(0,_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.E)(addressToClaim,quantity,await this.getActive(tokenId),(async()=>(await this.metadata.get()).merkle),0,this.contractWrapper,this.storage,checkERC20Allowance,this.getSnapshotFormatVersion())}async getClaimArguments(tokenId,destinationAddress,quantity,claimVerification){const resolvedAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(destinationAddress);return this.isLegacyMultiPhaseDrop(this.contractWrapper)?[resolvedAddress,tokenId,quantity,claimVerification.currencyAddress,claimVerification.price,claimVerification.proofs,claimVerification.maxClaimable]:this.isLegacySinglePhaseDrop(this.contractWrapper)?[resolvedAddress,tokenId,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,maxQuantityInAllowlist:claimVerification.maxClaimable},ethers__WEBPACK_IMPORTED_MODULE_10__.YW("")]:[resolvedAddress,tokenId,quantity,claimVerification.currencyAddress,claimVerification.price,{proof:claimVerification.proofs,quantityLimitPerWallet:claimVerification.maxClaimable,pricePerToken:claimVerification.priceInProof,currency:claimVerification.currencyAddressInProof},ethers__WEBPACK_IMPORTED_MODULE_10__.YW("")]}async getClaimTransaction(destinationAddress,tokenId,quantity,options){if(options?.pricePerToken)throw new Error("Price per token should be set via claim conditions by calling `contract.erc1155.claimConditions.set()`");const claimVerification=await this.prepareClaim(tokenId,quantity,options?.checkERC20Allowance||!0);return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"claim",args:await this.getClaimArguments(tokenId,destinationAddress,quantity,claimVerification),overrides:claimVerification.overrides})}isNewSinglePhaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(contractWrapper,"ERC1155ClaimConditionsV2")}isNewMultiphaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(contractWrapper,"ERC1155ClaimPhasesV2")}isLegacySinglePhaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(contractWrapper,"ERC1155ClaimConditionsV1")}isLegacyMultiPhaseDrop(contractWrapper){return(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(contractWrapper,"ERC1155ClaimPhasesV1")}getSnapshotFormatVersion(){return this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isLegacySinglePhaseDrop(this.contractWrapper)?_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.F.V1:_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.F.V2}}const AirdropAddressInput=(()=>zod__WEBPACK_IMPORTED_MODULE_11__.z.object({address:_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.b9,quantity:_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.cw.default(1)}))(),AirdropInputSchema=(()=>zod__WEBPACK_IMPORTED_MODULE_11__.z.union([zod__WEBPACK_IMPORTED_MODULE_11__.z.array(zod__WEBPACK_IMPORTED_MODULE_11__.z.string()).transform((async strings=>await Promise.all(strings.map((address=>AirdropAddressInput.parseAsync({address})))))),zod__WEBPACK_IMPORTED_MODULE_11__.z.array(AirdropAddressInput)]))();class ERC1155Claimable{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.d9.name;constructor(contractWrapper){this.contractWrapper=contractWrapper}async getClaimTransaction(destinationAddress,tokenId,quantity,options){let overrides={};return options&&options.pricePerToken&&(overrides=await(0,_contract_owner_49e75547_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.c)(this.contractWrapper,options.pricePerToken,quantity,options.currencyAddress,options.checkERC20Allowance)),_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"claim",args:[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(destinationAddress),tokenId,quantity],overrides})}to=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(destinationAddress,tokenId,quantity,options)=>await this.getClaimTransaction(destinationAddress,tokenId,quantity,options)))}class Erc1155ClaimableWithConditions{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.da.name;constructor(contractWrapper,storage){this.contractWrapper=contractWrapper,this.storage=storage;const metadata=new _contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.C(this.contractWrapper,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.bg,this.storage);this.conditions=new DropErc1155ClaimConditions(contractWrapper,metadata,this.storage)}to=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(destinationAddress,tokenId,quantity,options)=>await this.conditions.getClaimTransaction(destinationAddress,tokenId,quantity,options)))}class Erc1155SignatureMintable{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.db.name;constructor(contractWrapper,storage,roles){this.contractWrapper=contractWrapper,this.storage=storage,this.roles=roles}mint=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async signedPayload=>{const mintRequest=signedPayload.payload,signature=signedPayload.signature,[message,overrides]=await Promise.all([this.mapPayloadToContractStruct(mintRequest),this.contractWrapper.getCallOverrides()]);return await(0,_setErc20Allowance_7f76f677_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.s)(this.contractWrapper,message.pricePerToken.mul(message.quantity),mintRequest.currencyAddress,overrides),_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintWithSignature",args:[message,signature],overrides,parse:receipt=>{const t=this.contractWrapper.parseLogs("TokensMintedWithSignature",receipt.logs);if(0===t.length)throw new Error("No MintWithSignature event found");return{id:t[0].args.tokenIdMinted,receipt}}})}));mintBatch=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async signedPayloads=>{const contractStructs=await Promise.all(signedPayloads.map((s=>this.mapPayloadToContractStruct(s.payload)))),contractPayloads=signedPayloads.map(((s,index)=>{const message=contractStructs[index],signature=s.signature,price=s.payload.price;if(ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(price).gt(0))throw new Error("Can only batch free mints. For mints with a price, use regular mint()");return{message,signature}})),contractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(this.contractWrapper),encoded=contractPayloads.map((p=>contractEncoder.encode("mintWithSignature",[p.message,p.signature])));if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.h)("multicall",this.contractWrapper))return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[encoded],parse:receipt=>{const events=this.contractWrapper.parseLogs("TokensMintedWithSignature",receipt.logs);if(0===events.length)throw new Error("No MintWithSignature event found");return events.map((log=>({id:log.args.tokenIdMinted,receipt})))}});throw new Error("Multicall not supported on this contract!")}));async verify(signedPayload){const mintRequest=signedPayload.payload,signature=signedPayload.signature,message=await this.mapPayloadToContractStruct(mintRequest);return(await this.contractWrapper.read("verify",[message,signature]))[0]}async generate(payloadToSign){const payload={...payloadToSign,tokenId:ethers__WEBPACK_IMPORTED_MODULE_5__.Is};return this.generateFromTokenId(payload)}async generateFromTokenId(payloadToSign){return(await this.generateBatchFromTokenIds([payloadToSign]))[0]}async generateBatch(payloadsToSign){const payloads=payloadsToSign.map((payload=>({...payload,tokenId:ethers__WEBPACK_IMPORTED_MODULE_5__.Is})));return this.generateBatchFromTokenIds(payloads)}async generateBatchFromTokenIds(payloadsToSign){const signer=this.contractWrapper.getSigner();(0,tiny_invariant__WEBPACK_IMPORTED_MODULE_14__.A)(signer,"No signer available"),await(this.roles?.verify(["minter"],await signer.getAddress()));const parsedRequests=await Promise.all(payloadsToSign.map((m=>_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.r.parseAsync(m)))),metadatas=parsedRequests.map((r=>r.metadata)),[uris,chainId,contractInfo]=await Promise.all([(0,_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.u)(metadatas,this.storage),this.contractWrapper.getChainID(),(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dc)(this.contractWrapper.address,this.contractWrapper.getProvider())]),finalPayloads=await Promise.all(parsedRequests.map(((m,i)=>_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.s.parseAsync({...m,uri:uris[i]})))),contractStructs=await Promise.all(finalPayloads.map((finalPayload=>this.mapPayloadToContractStruct(finalPayload)))),isLegacyContract="TokenERC1155"===contractInfo?.type;return(await Promise.all(contractStructs.map((contractStruct=>this.contractWrapper.signTypedData(signer,{name:isLegacyContract?"TokenERC1155":"SignatureMintERC1155",version:"1",chainId,verifyingContract:this.contractWrapper.address},{MintRequest:_signature_d3ea643d_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.w},contractStruct))))).map(((signature,index)=>({payload:finalPayloads[index],signature:signature.toString()})))}async mapPayloadToContractStruct(mintRequest){const normalizedPricePerToken=await(0,_normalizePriceValue_9851c0eb_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.n)(this.contractWrapper.getProvider(),mintRequest.price,mintRequest.currencyAddress);return{to:mintRequest.to,tokenId:mintRequest.tokenId,uri:mintRequest.uri,quantity:mintRequest.quantity,pricePerToken:normalizedPricePerToken,currency:mintRequest.currencyAddress,validityStartTimestamp:mintRequest.mintStartTime,validityEndTimestamp:mintRequest.mintEndTime,uid:mintRequest.uid,royaltyRecipient:mintRequest.royaltyRecipient,royaltyBps:mintRequest.royaltyBps,primarySaleRecipient:mintRequest.primarySaleRecipient}}}class Erc1155Burnable{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dd.name;constructor(contractWrapper){this.contractWrapper=contractWrapper}tokens=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenId,amount)=>{const account=await this.contractWrapper.getSignerAddress();return this.from.prepare(account,tokenId,amount)}));from=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(account,tokenId,amount)=>_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"burn",args:[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(account),tokenId,amount]})));batch=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenIds,amounts)=>{const account=await this.contractWrapper.getSignerAddress();return this.batchFrom.prepare(account,tokenIds,amounts)}));batchFrom=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(account,tokenIds,amounts)=>_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"burnBatch",args:[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(account),tokenIds,amounts]})))}class Erc1155Enumerable{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.de.name;constructor(erc1155,contractWrapper){this.erc1155=erc1155,this.contractWrapper=contractWrapper}async all(queryParams){const start=ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(queryParams?.start||0).toNumber(),count=ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(queryParams?.count||_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.D).toNumber(),maxId=Math.min((await this.totalCount()).toNumber(),start+count);return await Promise.all([...Array(maxId-start).keys()].map((i=>this.erc1155.get((start+i).toString()))))}async totalCount(){return await this.contractWrapper.read("nextTokenIdToMint",[])}async totalCirculatingSupply(tokenId){return await this.contractWrapper.read("totalSupply",[tokenId])}async owned(walletAddress,queryParams){const[address,maxId]=await Promise.all([(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(walletAddress||await this.contractWrapper.getSignerAddress()),this.contractWrapper.read("nextTokenIdToMint",[])]);let ownedBalances=(await this.contractWrapper.read("balanceOfBatch",[Array(maxId.toNumber()).fill(address),Array.from(Array(maxId.toNumber()).keys())])).map(((b,i)=>({tokenId:i,balance:b}))).filter((b=>b.balance.gt(0)));if(queryParams){const start=queryParams?.start||0,count=queryParams?.count||_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.D;ownedBalances=ownedBalances.slice(start,start+count)}return(await Promise.all(ownedBalances.map((item=>this.erc1155.get(item.tokenId.toString()))))).map(((editionMetadata,index)=>({...editionMetadata,owner:address,quantityOwned:ownedBalances[index].balance.toString()})))}}class Erc1155LazyMintable{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.df.name;constructor(erc1155,contractWrapper,storage){this.erc1155=erc1155,this.contractWrapper=contractWrapper,this.storage=storage,this.revealer=this.detectErc1155Revealable()}lazyMint=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(metadatas,options)=>{const startFileNumber=await this.erc1155.nextTokenIdToMint(),batch=await(0,_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.u)(metadatas,this.storage,startFileNumber.toNumber(),options),baseUri=batch[0].substring(0,batch[0].lastIndexOf("/"));for(let i=0;i<batch.length;i++){const uri=batch[i].substring(0,batch[i].lastIndexOf("/"));if(baseUri!==uri)throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${baseUri}' but got '${uri}'`)}const parse=receipt=>{const event=this.contractWrapper.parseLogs("TokensLazyMinted",receipt?.logs),startingIndex=event[0].args.startTokenId,endingIndex=event[0].args.endTokenId,results=[];for(let id=startingIndex;id.lte(endingIndex);id=id.add(1))results.push({id,receipt,data:()=>this.erc1155.getTokenMetadata(id)});return results},prebuiltInfo=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dc)(this.contractWrapper.address,this.contractWrapper.getProvider());return this.isLegacyEditionDropContract(this.contractWrapper,prebuiltInfo)?_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[batch.length,`${baseUri.endsWith("/")?baseUri:`${baseUri}/`}`],parse}):_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[batch.length,`${baseUri.endsWith("/")?baseUri:`${baseUri}/`}`,ethers__WEBPACK_IMPORTED_MODULE_10__.YW("")],parse})}));updateMetadata=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenId,metadata,options)=>{const batchCount=await this.contractWrapper.read("getBaseURICount",[]);if(batchCount.eq(0))throw new Error("No base URI set. Please set a base URI before updating metadata");const targetTokenId=ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(tokenId);let startTokenId=ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(0),endTokenId=ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(0),batchIndex=0;for(let i=0;i<batchCount.toNumber()&&(batchIndex=i,endTokenId=await this.contractWrapper.read("getBatchIdAtIndex",[batchIndex]),!endTokenId.gt(targetTokenId));i++)startTokenId=endTokenId;const range=Array.from({length:endTokenId.sub(startTokenId).toNumber()},((v,k)=>k+startTokenId.toNumber())),metadatas=await Promise.all(range.map((id=>this.erc1155.getTokenMetadata(id)))),newMetadatas=[];for(let i=0;i<metadatas.length;i++){const{id,uri,...rest}=metadatas[i];ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(targetTokenId).eq(ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(id))?newMetadatas.push(metadata):newMetadatas.push(rest)}const batch=await(0,_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.u)(newMetadatas,this.storage,startTokenId.toNumber(),options),baseUri=batch[0].substring(0,batch[0].lastIndexOf("/"));return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateBatchBaseURI",args:[batchIndex,`${baseUri.endsWith("/")?baseUri:`${baseUri}/`}`]})}));detectErc1155Revealable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155Revealable"))return new _contract_owner_49e75547_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.D(this.contractWrapper,this.storage,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dg.name,(()=>this.erc1155.nextTokenIdToMint()))}isLegacyEditionDropContract(contractWrapper,info){return info&&"DropERC1155"===info.type&&info.version<3||!1}}class Erc1155BatchMintable{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dh.name;constructor(erc1155,contractWrapper,storage){this.erc1155=erc1155,this.contractWrapper=contractWrapper,this.storage=storage}to=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(to,metadataWithSupply)=>{const metadatas=metadataWithSupply.map((a=>a.metadata)),supplies=metadataWithSupply.map((a=>a.supply)),uris=await(0,_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.u)(metadatas,this.storage),resolvedAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(to),contractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(this.contractWrapper),encoded=await Promise.all(uris.map((async(uri,index)=>contractEncoder.encode("mintTo",[resolvedAddress,ethers__WEBPACK_IMPORTED_MODULE_5__.Is,uri,supplies[index]]))));return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[encoded],parse:receipt=>{const events=this.contractWrapper.parseLogs("TokensMinted",receipt.logs);if(0===events.length||events.length<metadatas.length)throw new Error("TokenMinted event not found, minting failed");return events.map((e=>{const id=e.args.tokenIdMinted;return{id,receipt,data:()=>this.erc1155.get(id)}}))}})}))}class Erc1155Mintable{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.di.name;constructor(erc1155,contractWrapper,storage){this.erc1155=erc1155,this.contractWrapper=contractWrapper,this.storage=storage,this.batch=this.detectErc1155BatchMintable()}to=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(to,metadataWithSupply)=>{const tx=await this.getMintTransaction(to,metadataWithSupply);return tx.setParse((receipt=>{const event=this.contractWrapper.parseLogs("TransferSingle",receipt?.logs);if(0===event.length)throw new Error("TransferSingleEvent event not found");const id=event[0].args.id;return{id,receipt,data:()=>this.erc1155.get(id.toString())}})),tx}));async getMintTransaction(to,metadataWithSupply){const uri=await(0,_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.b)(metadataWithSupply.metadata,this.storage);return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintTo",args:[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(to),ethers__WEBPACK_IMPORTED_MODULE_5__.Is,uri,metadataWithSupply.supply]})}additionalSupplyTo=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(to,tokenId,additionalSupply)=>{const metadata=await this.erc1155.getTokenMetadata(tokenId);return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintTo",args:[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(to),tokenId,metadata.uri,additionalSupply],parse:receipt=>({id:ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(tokenId),receipt,data:()=>this.erc1155.get(tokenId)})})}));detectErc1155BatchMintable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155BatchMintable"))return new Erc1155BatchMintable(this.erc1155,this.contractWrapper,this.storage)}}class Erc1155{featureName=_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dj.name;get chainId(){return this._chainId}constructor(contractWrapper,storage,chainId){this.contractWrapper=contractWrapper,this.storage=storage,this.query=this.detectErc1155Enumerable(),this.mintable=this.detectErc1155Mintable(),this.burnable=this.detectErc1155Burnable(),this.lazyMintable=this.detectErc1155LazyMintable(),this.signatureMintable=this.detectErc1155SignatureMintable(),this.claimCustom=this.detectErc1155Claimable(),this.claimWithConditions=this.detectErc1155ClaimableWithConditions(),this._chainId=chainId}onNetworkUpdated(network){this.contractWrapper.updateSignerOrProvider(network)}getAddress(){return this.contractWrapper.address}async get(tokenId){const[supply,metadata]=await Promise.all([this.contractWrapper.read("totalSupply",[tokenId]).catch((()=>ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(0))),this.getTokenMetadata(tokenId).catch((()=>({id:tokenId.toString(),uri:"",..._QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.F})))]);return{owner:ethers__WEBPACK_IMPORTED_MODULE_8__.L,metadata,type:"ERC1155",supply:supply.toString()}}async totalSupply(tokenId){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155Supply"))return await this.contractWrapper.read("totalSupply",[tokenId]);throw new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.x(_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dk)}async balanceOf(address,tokenId){return await this.contractWrapper.read("balanceOf",[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(address),tokenId])}async balance(tokenId){return await this.balanceOf(await this.contractWrapper.getSignerAddress(),tokenId)}async isApproved(address,operator){return await this.contractWrapper.read("isApprovedForAll",[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(address),await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(operator)])}transfer=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((()=>{var _this=this;return async function(to,tokenId,amount){let data=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];const from=await _this.contractWrapper.getSignerAddress();return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:_this.contractWrapper,method:"safeTransferFrom",args:[from,await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(to),tokenId,amount,data]})}})());transferBatch=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((()=>{var _this2=this;return async function(to,tokenIds,amounts,fromAddress){let data=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[0];const from=fromAddress?await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(fromAddress):await _this2.contractWrapper.getSignerAddress();return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:_this2.contractWrapper,method:"safeBatchTransferFrom",args:[from,await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(to),tokenIds,amounts,data]})}})());transferFrom=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((()=>{var _this3=this;return async function(from,to,tokenId,amount){let data=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[0];return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:_this3.contractWrapper,method:"safeTransferFrom",args:[await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(from),await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(to),tokenId,amount,data]})}})());setApprovalForAll=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(operator,approved)=>_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setApprovalForAll",args:[operator,approved]})));airdrop=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((()=>{var _this4=this;return async function(tokenId,addresses,fromAddress){let data=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];const from=fromAddress?await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(fromAddress):await _this4.contractWrapper.getSignerAddress(),balanceOf=await _this4.balanceOf(from,tokenId),input=await AirdropInputSchema.parseAsync(addresses),totalToAirdrop=input.reduce(((prev,curr)=>ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(prev).add(ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(curr?.quantity||1))),ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(0));if(balanceOf.lt(ethers__WEBPACK_IMPORTED_MODULE_3__.gH.from(totalToAirdrop)))throw new Error(`The caller owns ${balanceOf.toString()} NFTs, but wants to airdrop ${totalToAirdrop.toString()} NFTs.`);const contractEncoder=new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.C(_this4.contractWrapper),encoded=input.map((_ref=>{let{address:to,quantity}=_ref;return contractEncoder.encode("safeTransferFrom",[from,to,tokenId,quantity,data])}));return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:_this4.contractWrapper,method:"multicall",args:[encoded]})}})());async nextTokenIdToMint(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.h)("nextTokenIdToMint",this.contractWrapper))return await this.contractWrapper.read("nextTokenIdToMint",[]);throw new Error("Contract requires the `nextTokenIdToMint` function available to determine the next token ID to mint")}async getAll(queryParams){return(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.query,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.de).all(queryParams)}async totalCount(){return(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.query,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.de).totalCount()}async totalCirculatingSupply(tokenId){return(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.query,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.de).totalCirculatingSupply(tokenId)}async getOwned(walletAddress,queryParams){return walletAddress&&(walletAddress=await(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.aL)(walletAddress)),(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.query,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.de).owned(walletAddress,queryParams)}mint=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async metadataWithSupply=>this.mintTo.prepare(await this.contractWrapper.getSignerAddress(),metadataWithSupply)));mintTo=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(receiver,metadataWithSupply)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.mintable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.di).to.prepare(receiver,metadataWithSupply)));async getMintTransaction(receiver,metadataWithSupply){return(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.mintable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.di).getMintTransaction(receiver,metadataWithSupply)}mintAdditionalSupply=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenId,additionalSupply)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.mintable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.di).additionalSupplyTo.prepare(await this.contractWrapper.getSignerAddress(),tokenId,additionalSupply)));mintAdditionalSupplyTo=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(receiver,tokenId,additionalSupply)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.mintable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.di).additionalSupplyTo.prepare(receiver,tokenId,additionalSupply)));mintBatch=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async metadataWithSupply=>this.mintBatchTo.prepare(await this.contractWrapper.getSignerAddress(),metadataWithSupply)));mintBatchTo=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(receiver,metadataWithSupply)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.mintable?.batch,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dh).to.prepare(receiver,metadataWithSupply)));burn=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenId,amount)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.burnable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dd).tokens.prepare(tokenId,amount)));burnFrom=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(account,tokenId,amount)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.burnable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dd).from.prepare(account,tokenId,amount)));burnBatch=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenIds,amounts)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.burnable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dd).batch.prepare(tokenIds,amounts)));burnBatchFrom=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(account,tokenIds,amounts)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.burnable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dd).batchFrom.prepare(account,tokenIds,amounts)));lazyMint=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(metadatas,options)=>(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.lazyMintable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.df).lazyMint.prepare(metadatas,options)));updateMetadata=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenId,metadata)=>{if(this.lazyMintable)return this.lazyMintable.updateMetadata.prepare(tokenId,metadata);if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155UpdatableMetadata")){const uri=await this.storage.upload(metadata);return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setTokenURI",args:[tokenId,uri]})}throw new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.x(_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dl)}));async getClaimTransaction(destinationAddress,tokenId,quantity,options){const claimWithConditions=this.claimWithConditions,claim=this.claimCustom;if(claimWithConditions)return claimWithConditions.conditions.getClaimTransaction(destinationAddress,tokenId,quantity,options);if(claim)return claim.getClaimTransaction(destinationAddress,tokenId,quantity,options);throw new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.x(_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.d9)}claim=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(tokenId,quantity,options)=>this.claimTo.prepare(await this.contractWrapper.getSignerAddress(),tokenId,quantity,options)));claimTo=(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.f)((async(destinationAddress,tokenId,quantity,options)=>{const claimWithConditions=this.claimWithConditions,claim=this.claimCustom;if(claimWithConditions)return claimWithConditions.to.prepare(destinationAddress,tokenId,quantity,options);if(claim)return claim.to.prepare(destinationAddress,tokenId,quantity,options);throw new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.x(_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.d9)}));get claimConditions(){return(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.claimWithConditions,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.da).conditions}get signature(){return(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.signatureMintable,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.db)}get revealer(){return(0,_assertEnabled_d1700f0b_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.a)(this.lazyMintable?.revealer,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.dg)}async getTokenMetadata(tokenId){const tokenUri=await this.contractWrapper.read("uri",[tokenId]);if(!tokenUri)throw new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.n;return(0,_QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.f)(tokenId,tokenUri,this.storage)}detectErc1155Enumerable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155Enumerable"))return new Erc1155Enumerable(this,this.contractWrapper)}detectErc1155Mintable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155Mintable"))return new Erc1155Mintable(this,this.contractWrapper,this.storage)}detectErc1155Burnable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155Burnable"))return new Erc1155Burnable(this.contractWrapper)}detectErc1155LazyMintable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155LazyMintableV1")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155LazyMintableV2"))return new Erc1155LazyMintable(this,this.contractWrapper,this.storage)}detectErc1155SignatureMintable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155SignatureMintable"))return new Erc1155SignatureMintable(this.contractWrapper,this.storage)}detectErc1155Claimable(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155ClaimCustom"))return new ERC1155Claimable(this.contractWrapper)}detectErc1155ClaimableWithConditions(){if((0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155ClaimConditionsV1")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155ClaimConditionsV2")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155ClaimPhasesV1")||(0,_contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.d)(this.contractWrapper,"ERC1155ClaimPhasesV2"))return new Erc1155ClaimableWithConditions(this.contractWrapper,this.storage)}}}}]);